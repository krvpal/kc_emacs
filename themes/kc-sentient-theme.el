(deftheme kc-sentient
  "Created 2022-11-14.")

(custom-theme-set-faces
 'kc-sentient
 '(default ((t (:family "Fira Code" :foundry "nil" :width normal :height 151 :weight medium :slant normal :underline nil :overline nil :extend nil :strike-through nil :box nil :inverse-video nil :foreground "#d6d6d4" :background "#171717" :stipple nil :inherit (default)))))
 '(cursor ((t (:background "#f40000"))))
 '(fixed-pitch ((t (:family "Fira Code" :foundry "nil" :width normal :height 151 :weight medium :slant normal))))
 '(variable-pitch ((t (:family "Fira Code" :foundry "nil" :width normal :height 151 :weight medium :slant normal))))
 '(escape-glyph ((t (:foreground "#66d9ef"))))
 '(homoglyph ((((background dark)) (:foreground "cyan")) (((type pc)) (:foreground "magenta")) (t (:foreground "brown"))))
 '(minibuffer-prompt ((t (:foreground "#fd971f"))))
 '(highlight ((t (:foreground "#1B2229" :background "#fd971f"))))
 '(region ((t (:extend t :background "#4e4e4e"))))
 '(shadow ((t (:foreground "#555556"))))
 '(secondary-selection ((t (:extend t :background "#525254"))))
 '(trailing-whitespace ((t (:background "#e74c3c"))))
 '(font-lock-builtin-face ((t (:foreground "#fd971f"))))
 '(font-lock-comment-delimiter-face ((default (:inherit (font-lock-comment-face)))))
 '(font-lock-comment-face ((t (:foreground "dim gray"))))
 '(font-lock-constant-face ((t (:foreground "#fd971f"))))
 '(font-lock-doc-face ((t (:foreground "#7f7f80" :inherit (font-lock-comment-face)))))
 '(font-lock-doc-markup-face ((t (:inherit (font-lock-constant-face)))))
 '(font-lock-function-name-face ((t (:foreground "#b6e63e"))))
 '(font-lock-keyword-face ((t (:foreground "#eb4509"))))
 '(font-lock-negation-char-face ((t (:foreground "#9c91e4" :inherit (bold)))))
 '(font-lock-preprocessor-face ((t (:foreground "#9c91e4" :inherit (bold)))))
 '(font-lock-regexp-grouping-backslash ((t (:foreground "#9c91e4" :inherit (bold)))))
 '(font-lock-regexp-grouping-construct ((t (:foreground "#9c91e4" :inherit (bold)))))
 '(font-lock-string-face ((t (:foreground "#e2c770"))))
 '(font-lock-type-face ((t (:foreground "#66d9ef"))))
 '(font-lock-variable-name-face ((t (:foreground "#fd971f"))))
 '(font-lock-warning-face ((t (:inherit (warning)))))
 '(button ((t (:inherit (link)))))
 '(link ((t (:weight bold :underline (:color foreground-color :style line) :foreground "#fd971f"))))
 '(link-visited ((default (:inherit (link))) (((class color) (background light)) (:foreground "magenta4")) (((class color) (background dark)) (:foreground "violet"))))
 '(fringe ((t (:foreground "#4e4e4e" :inherit (default)))))
 '(header-line ((t (:height 120 :background "#171717" :inherit (mode-line)))))
 '(tooltip ((t (:foreground "#d6d6d4" :background "#171717"))))
 '(mode-line ((t (:foreground "sienna" :background "#161719"))))
 '(mode-line-buffer-id ((t (:weight bold))))
 '(mode-line-emphasis ((t (:foreground "#fd971f"))))
 '(mode-line-highlight ((t (:inherit (highlight)))))
 '(mode-line-inactive ((t (:box nil :foreground "#4e4e4e" :background "#171819"))))
 '(isearch ((t (:foreground "#1B2229" :background "#b6e63e"))))
 '(isearch-fail ((t (:weight bold :foreground "#1B2229" :background "#e74c3c"))))
 '(lazy-highlight ((t (:weight bold :foreground "#1B2229" :background "#9c91e4"))))
 '(match ((t (:weight bold :foreground "#b6e63e" :background "#1B2229"))))
 '(next-error ((t (:inherit (region)))))
 '(query-replace ((t (:inherit (isearch)))))
 '(+eshell-prompt-git-branch ((t (:inherit (font-lock-builtin-face)))))
 '(+eshell-prompt-pwd ((t (:inherit (font-lock-constant-face)))))
 '(+org-todo-active ((t (:inherit (bold font-lock-constant-face org-todo)))))
 '(+org-todo-cancel ((t (:inherit (bold error org-todo)))))
 '(+org-todo-onhold ((t (:inherit (bold warning org-todo)))))
 '(+org-todo-project ((t (:inherit (bold font-lock-doc-face org-todo)))))
 '(+workspace-tab-face ((t (:inherit (default)))))
 '(+workspace-tab-selected-face ((t (:inherit (highlight)))))
 '(Info-quoted ((t (:inherit (fixed-pitch-serif)))))
 '(all-the-icons-blue ((t (:foreground "#268bd2"))))
 '(all-the-icons-blue-alt ((t (:foreground "#b6e63e"))))
 '(all-the-icons-cyan ((t (:foreground "#66d9ef"))))
 '(all-the-icons-cyan-alt ((t (:foreground "#66d9ef"))))
 '(all-the-icons-dblue ((t (:foreground "#727280"))))
 '(all-the-icons-dcyan ((t (:foreground "#8fa1b3"))))
 '(all-the-icons-dgreen ((t (:foreground "#7fa12b"))))
 '(all-the-icons-dmaroon ((t (:foreground "#a43006"))))
 '(all-the-icons-dorange ((t (:foreground "#b16915"))))
 '(all-the-icons-dpink ((t (:foreground "#ea6659"))))
 '(all-the-icons-dpurple ((t (:foreground "#6d659f"))))
 '(all-the-icons-dred ((t (:foreground "#a1352a"))))
 '(all-the-icons-dsilver ((t (:foreground "#636365"))))
 '(all-the-icons-dyellow ((t (:foreground "#9e8b4e"))))
 '(all-the-icons-green ((t (:foreground "#b6e63e"))))
 '(all-the-icons-lblue ((t (:foreground "#67addf"))))
 '(all-the-icons-lcyan ((t (:foreground "#93e4f3"))))
 '(all-the-icons-lgreen ((t (:foreground "#cbed77"))))
 '(all-the-icons-lmaroon ((t (:foreground "#f17c52"))))
 '(all-the-icons-lorange ((t (:foreground "#fdb662"))))
 '(all-the-icons-lpink ((t (:foreground "#f4aea7"))))
 '(all-the-icons-lpurple ((t (:foreground "#b9b2ec"))))
 '(all-the-icons-lred ((t (:foreground "#ee8176"))))
 '(all-the-icons-lsilver ((t (:foreground "#cbcbcb"))))
 '(all-the-icons-lyellow ((t (:foreground "#ead79a"))))
 '(all-the-icons-maroon ((t (:foreground "#eb4509"))))
 '(all-the-icons-orange ((t (:foreground "#fd971f"))))
 '(all-the-icons-pink ((t (:foreground "#ef8a80"))))
 '(all-the-icons-purple ((t (:foreground "#9c91e4"))))
 '(all-the-icons-purple-alt ((t (:foreground "#5d5b69"))))
 '(all-the-icons-red ((t (:foreground "#e74c3c"))))
 '(all-the-icons-red-alt ((t (:foreground "#685150"))))
 '(all-the-icons-silver ((t (:foreground "#9f9fa0"))))
 '(all-the-icons-yellow ((t (:foreground "#e2c770"))))
 '(ansi-color-black ((t (:foreground "#000000" :background "#000000"))))
 '(ansi-color-blue ((t (:foreground "#268bd2" :background "#268bd2"))))
 '(ansi-color-bold ((t (:inherit 'bold))))
 '(ansi-color-bright-black ((t (:foreground "#1B2229" :background "#1d1f20"))))
 '(ansi-color-bright-blue ((t (:foreground "#469cd8" :background "#469cd8"))))
 '(ansi-color-bright-cyan ((t (:foreground "#7cdef1" :background "#7cdef1"))))
 '(ansi-color-bright-green ((t (:foreground "#c0e95a" :background "#c0e95a"))))
 '(ansi-color-bright-magenta ((t (:foreground "#ed602d" :background "#ed602d"))))
 '(ansi-color-bright-red ((t (:foreground "#ea6659" :background "#ea6659"))))
 '(ansi-color-bright-white ((t (:foreground "#ffffff" :background "#ffffff"))))
 '(ansi-color-bright-yellow ((t (:foreground "#e6cf85" :background "#e6cf85"))))
 '(ansi-color-cyan ((t (:foreground "#66d9ef" :background "#66d9ef"))))
 '(ansi-color-faint ((t (:weight light))))
 '(ansi-color-fast-blink ((t (:box (:line-width (1 . -1) :color nil :style nil)))))
 '(ansi-color-green ((t (:foreground "#b6e63e" :background "#b6e63e"))))
 '(ansi-color-inverse ((t (:inverse-video t))))
 '(ansi-color-italic ((t (:inherit 'italic))))
 '(ansi-color-magenta ((t (:foreground "#eb4509" :background "#eb4509"))))
 '(ansi-color-red ((t (:foreground "#e74c3c" :background "#e74c3c"))))
 '(ansi-color-slow-blink ((t (:box (:line-width (1 . -1) :color nil :style nil)))))
 '(ansi-color-underline ((t (:inherit 'underline))))
 '(ansi-color-white ((t (:foreground "#d6d6d4" :background "#d6d6d4"))))
 '(ansi-color-yellow ((t (:foreground "#e2c770" :background "#e2c770"))))
 '(anzu-match-1 ((((class color) (background light)) (:foreground "black" :background "aquamarine")) (((class color) (background dark)) (:foreground "black" :background "limegreen")) (t (:inverse-video t))))
 '(anzu-match-2 ((((class color) (background light)) (:foreground "black" :background "springgreen")) (((class color) (background dark)) (:foreground "black" :background "yellow")) (t (:inverse-video t))))
 '(anzu-match-3 ((((class color) (background light)) (:foreground "black" :background "yellow")) (((class color) (background dark)) (:foreground "black" :background "aquamarine")) (t (:inverse-video t))))
 '(anzu-mode-line ((t (:weight bold :foreground "magenta"))))
 '(anzu-mode-line-no-match ((t (:inherit (anzu-mode-line)))))
 '(anzu-replace-highlight ((t (:weight bold :strike-through t :foreground "#e74c3c" :background "#1B2229"))))
 '(anzu-replace-to ((t (:weight bold :foreground "#b6e63e" :background "#1B2229"))))
 '(avy-background-face ((t (:foreground "#555556"))))
 '(avy-goto-char-timer-face ((t (:inherit (highlight)))))
 '(avy-lead-face ((t (:weight bold :foreground "#000000" :background "#fd971f"))))
 '(avy-lead-face-0 ((t (:background "#fdb662" :inherit (avy-lead-face)))))
 '(avy-lead-face-1 ((t (:background "#fed5a5" :inherit (avy-lead-face)))))
 '(avy-lead-face-2 ((t (:background "#fef4e8" :inherit (avy-lead-face)))))
 '(aw-background-face ((t (:foreground "gray40"))))
 '(aw-key-face ((t (:inherit (font-lock-builtin-face)))))
 '(aw-leading-char-face ((t (:box (:line-width (10 . 10) :color "orangered" :style nil) :height 2.5 :weight bold :background "orangered" :foreground "white"))))
 '(aw-minibuffer-leading-char-face ((t (:inherit (aw-leading-char-face)))))
 '(aw-mode-line-face ((t (:inherit (mode-line-buffer-id)))))
 '(battery-load-critical ((t (:inherit (error)))))
 '(battery-load-low ((t (:inherit (warning)))))
 '(bold ((t (:weight bold))))
 '(bold-italic ((t (:inherit (bold italic)))))
 '(bookmark-face ((t (:extend t :background "#190f03"))))
 '(bookmark-menu-bookmark ((t (:weight bold))))
 '(bookmark-menu-heading ((t (:inherit (font-lock-type-face)))))
 '(border ((t nil)))
 '(browse-url-button ((t (:inherit (link)))))
 '(buffer-menu-buffer ((t (:weight bold))))
 '(calc-nonselected-face ((t (:slant italic :inherit (shadow)))))
 '(calc-selected-face ((t (:weight bold))))
 '(calendar-month-header ((t (:inherit (font-lock-function-name-face)))))
 '(calendar-today ((t (:underline (:color foreground-color :style line)))))
 '(calendar-weekday-header ((t (:inherit (font-lock-constant-face)))))
 '(calendar-weekend-header ((t (:inherit (font-lock-comment-face)))))
 '(cfw:face-annotation ((t (:foreground "#9c91e4"))))
 '(cfw:face-day-title ((t (:weight bold :foreground "#d6d6d4"))))
 '(cfw:face-default-content ((t (:foreground "#d6d6d4"))))
 '(cfw:face-default-day ((t (:weight bold))))
 '(cfw:face-disable ((t (:foreground "#525254"))))
 '(cfw:face-grid ((t (:foreground "#009EE1"))))
 '(cfw:face-header ((t (:weight bold :foreground "#1e6fa8"))))
 '(cfw:face-holiday ((t (:weight bold :background "#171717"))))
 '(cfw:face-periods ((t (:foreground "#e2c770"))))
 '(cfw:face-saturday ((t (:weight bold :foreground "#b83c30"))))
 '(cfw:face-select ((t (:background "#4e4e4e"))))
 '(cfw:face-sunday ((t (:weight bold :foreground "#b83c30"))))
 '(cfw:face-title ((t (:height 2.0 :weight bold :foreground "#268bd2" :inherit (variable-pitch)))))
 '(cfw:face-today ((t (:weight bold))))
 '(cfw:face-today-title ((t (:weight bold :foreground "#000000" :background "#268bd2"))))
 '(cfw:face-toolbar ((((class color) (background light)) (:background "Gray90" :foreground "Gray90")) (((class color) (background dark)) (:background "Steelblue4" :foreground "Steelblue4"))))
 '(cfw:face-toolbar-button-off ((t (:weight bold :foreground "#767679" :inherit (variable-pitch)))))
 '(cfw:face-toolbar-button-on ((t (:weight bold :foreground "#268bd2" :inherit (variable-pitch)))))
 '(change-log-acknowledgment ((t (:inherit (font-lock-comment-face)))))
 '(change-log-conditionals ((t (:inherit (font-lock-variable-name-face)))))
 '(change-log-date ((t (:inherit (font-lock-string-face)))))
 '(change-log-email ((t (:inherit (font-lock-variable-name-face)))))
 '(change-log-file ((t (:inherit (font-lock-function-name-face)))))
 '(change-log-function ((t (:inherit (font-lock-variable-name-face)))))
 '(change-log-list ((t (:inherit (font-lock-keyword-face)))))
 '(change-log-name ((t (:inherit (font-lock-constant-face)))))
 '(child-frame-border ((t nil)))
 '(comint-highlight-input ((t (:weight bold))))
 '(comint-highlight-prompt ((t (:inherit (minibuffer-prompt)))))
 '(company-echo ((t nil)))
 '(company-echo-common ((((background light)) (:foreground "firebrick4")) (((background dark)) (:foreground "firebrick1"))))
 '(company-preview ((t (:foreground "#555556"))))
 '(company-preview-common ((t (:foreground "#fd971f" :background "#2d2e2e"))))
 '(company-preview-search ((t (:inherit (company-tooltip-search)))))
 '(company-tooltip ((t (:inherit (tooltip)))))
 '(company-tooltip-annotation ((t (:foreground "#9c91e4"))))
 '(company-tooltip-annotation-selection ((default (:inherit (company-tooltip-annotation)))))
 '(company-tooltip-common ((t (:weight bold :foreground "#fd971f"))))
 '(company-tooltip-common-selection ((default (:inherit (company-tooltip-common)))))
 '(company-tooltip-deprecated ((t (:strike-through t))))
 '(company-tooltip-mouse ((t (:foreground "#000000" :background "#eb4509"))))
 '(company-tooltip-quick-access ((default (:inherit (company-tooltip-annotation)))))
 '(company-tooltip-scrollbar-thumb ((t (:background "#fd971f"))))
 '(company-tooltip-scrollbar-track ((t (:inherit (tooltip)))))
 '(company-tooltip-search ((t (:weight bold :foreground "#000000" :background "#fd971f"))))
 '(company-tooltip-search-selection ((t (:background "#3f3f40"))))
 '(company-tooltip-selection ((t (:weight bold :background "#555556"))))
 '(compilation-column-number ((t (:inherit (font-lock-comment-face)))))
 '(compilation-error ((t (:weight bold :inherit (error)))))
 '(compilation-info ((t (:inherit (success)))))
 '(compilation-line-number ((t (:foreground "#fd971f"))))
 '(compilation-mode-line-exit ((t (:inherit (compilation-info)))))
 '(compilation-mode-line-fail ((t (:inherit (compilation-error)))))
 '(compilation-mode-line-run ((t (:inherit (compilation-warning)))))
 '(compilation-warning ((t (:slant italic :inherit (warning)))))
 '(completions-annotations ((t (:inherit (italic shadow)))))
 '(completions-common-part ((((class color) (min-colors 16) (background light)) (:foreground "blue3")) (((class color) (min-colors 16) (background dark)) (:foreground "lightblue"))))
 '(completions-first-difference ((t (:inherit nil))))
 '(completions-group-separator ((t (:strike-through t :inherit (shadow)))))
 '(completions-group-title ((t (:slant italic :inherit (shadow)))))
 '(consult-async-failed ((t (:inherit (error)))))
 '(consult-async-finished ((t (:inherit (success)))))
 '(consult-async-running ((t (:inherit (consult-narrow-indicator)))))
 '(consult-async-split ((t (:inherit (font-lock-negation-char-face)))))
 '(consult-bookmark ((t (:inherit (font-lock-constant-face)))))
 '(consult-buffer ((t nil)))
 '(consult-file ((t (:inherit (font-lock-function-name-face)))))
 '(consult-grep-context ((t (:inherit (shadow)))))
 '(consult-help ((t (:inherit (shadow)))))
 '(consult-key ((t (:inherit (font-lock-keyword-face)))))
 '(consult-line-number ((t (:inherit (consult-key)))))
 '(consult-line-number-prefix ((t (:inherit (line-number)))))
 '(consult-line-number-wrapped ((t (:inherit (font-lock-warning-face)))))
 '(consult-narrow-indicator ((t (:inherit (warning)))))
 '(consult-preview-cursor ((t (:inherit (consult-preview-match)))))
 '(consult-preview-error ((t (:inherit (isearch-fail)))))
 '(consult-preview-insertion ((t (:inherit (region)))))
 '(consult-preview-line ((t (:extend t :inherit (consult-preview-insertion)))))
 '(consult-preview-match ((t (:inherit (match)))))
 '(consult-separator ((((class color) (min-colors 88) (background light)) (:foreground "#ccc")) (((class color) (min-colors 88) (background dark)) (:foreground "#333"))))
 '(csv-separator-face ((t (:inherit (escape-glyph)))))
 '(custom-button ((t (:box (:line-width (1 . 1) :color nil :style none) :foreground "#268bd2" :background "#000000"))))
 '(custom-button-mouse ((t (:box (:line-width (1 . 1) :color nil :style none) :foreground "#000000" :background "#268bd2"))))
 '(custom-button-pressed ((t (:box (:line-width (1 . 1) :color nil :style none) :foreground "#000000" :background "#268bd2"))))
 '(custom-button-pressed-unraised ((t (:box (:line-width (1 . 1) :color nil :style none) :foreground "#000000" :background "#9c91e4"))))
 '(custom-button-unraised ((t (:box (:line-width (1 . 1) :color nil :style none) :foreground "#9c91e4" :background "#000000"))))
 '(custom-changed ((t (:foreground "#268bd2" :background "#000000"))))
 '(custom-comment ((t (:foreground "#d6d6d4" :background "#4e4e4e"))))
 '(custom-comment-tag ((t (:foreground "#525254"))))
 '(custom-documentation ((t nil)))
 '(custom-face-tag ((t (:inherit (custom-variable-tag)))))
 '(custom-group-subtitle ((t (:foreground "#e74c3c"))))
 '(custom-group-tag ((t (:foreground "#9c91e4"))))
 '(custom-group-tag-1 ((t (:foreground "#268bd2"))))
 '(custom-invalid ((t (:foreground "#e74c3c" :background "#2e0f0c"))))
 '(custom-link ((t (:inherit (link)))))
 '(custom-modified ((t (:foreground "#268bd2" :background "#071b2a"))))
 '(custom-rogue ((((class color)) (:background "black" :foreground "pink")) (t (:underline (:color foreground-color :style line)))))
 '(custom-saved ((t (:weight bold :foreground "#b6e63e" :background "#242e0c"))))
 '(custom-set ((t (:foreground "#e2c770" :background "#000000"))))
 '(custom-state ((t (:foreground "#b6e63e" :background "#242e0c"))))
 '(custom-themed ((t (:foreground "#e2c770" :background "#000000"))))
 '(custom-variable-button ((t (:underline (:color foreground-color :style line) :foreground "#b6e63e"))))
 '(custom-variable-obsolete ((t (:foreground "#525254" :background "#000000"))))
 '(custom-variable-tag ((t (:foreground "#eb4509"))))
 '(custom-visibility ((t (:foreground "#268bd2"))))
 '(diary ((((min-colors 88) (class color) (background light)) (:foreground "red1")) (((class color) (background light)) (:foreground "red")) (((min-colors 88) (class color) (background dark)) (:foreground "yellow1")) (((class color) (background dark)) (:foreground "yellow")) (t (:weight bold))))
 '(diff-added ((t (:extend t :foreground "#b6e63e" :inherit (hl-line)))))
 '(diff-changed ((t (:foreground "#9c91e4"))))
 '(diff-changed-unspecified ((default (:inherit (diff-changed))) (((class color) (min-colors 88) (background light)) (:extend t :background "grey90")) (((class color) (min-colors 88) (background dark)) (:extend t :background "grey20")) (((class color)) (:extend t :foreground "grey"))))
 '(diff-context ((t (:extend t :foreground "#bcbcba"))))
 '(diff-error ((((class color)) (:weight bold :background "black" :foreground "red")) (t (:weight bold))))
 '(diff-file-header ((t (:extend t :foreground "#268bd2"))))
 '(diff-function ((t (:inherit (diff-header)))))
 '(diff-header ((t (:extend t :foreground "#66d9ef"))))
 '(diff-hunk-header ((t (:foreground "#9c91e4"))))
 '(diff-index ((t (:inherit (diff-file-header)))))
 '(diff-indicator-added ((default (:inherit (diff-added))) (((class color) (min-colors 88)) (:foreground "#22aa22"))))
 '(diff-indicator-changed ((default (:inherit (diff-changed))) (((class color) (min-colors 88)) (:foreground "#aaaa22"))))
 '(diff-indicator-removed ((default (:inherit (diff-removed))) (((class color) (min-colors 88)) (:foreground "#aa2222"))))
 '(diff-nonexistent ((t (:inherit (diff-file-header)))))
 '(diff-refine-added ((t (:inverse-video t :inherit (diff-added)))))
 '(diff-refine-changed ((t (:inverse-video t :inherit (diff-changed)))))
 '(diff-refine-removed ((t (:inverse-video t :inherit (diff-removed)))))
 '(diff-removed ((t (:extend t :foreground "#e74c3c" :background "#2d2e2e"))))
 '(dired-broken-symlink ((((class color)) (:weight bold :background "red1" :foreground "yellow1")) (t (:underline (:color foreground-color :style line) :slant italic :weight bold))))
 '(dired-directory ((t (:foreground "#fd971f"))))
 '(dired-flagged ((t (:foreground "#e74c3c"))))
 '(dired-header ((t (:weight bold :foreground "#268bd2"))))
 '(dired-ignored ((t (:foreground "#555556"))))
 '(dired-mark ((t (:weight bold :foreground "#fd971f"))))
 '(dired-marked ((t (:weight bold :inverse-video t :foreground "#eb4509"))))
 '(dired-perm-write ((t (:underline (:color foreground-color :style line) :foreground "#d6d6d4"))))
 '(dired-set-id ((((type w32 pc)) (:inherit (default))) (t (:inherit (font-lock-warning-face)))))
 '(dired-special ((t (:inherit (font-lock-variable-name-face)))))
 '(dired-symlink ((t (:weight bold :foreground "#66d9ef"))))
 '(dired-warning ((t (:foreground "#e2c770"))))
 '(diredfl-autofile-name ((t (:foreground "#4e4e4e"))))
 '(diredfl-compressed-file-name ((t (:foreground "#e2c770"))))
 '(diredfl-compressed-file-suffix ((t (:foreground "#975a12"))))
 '(diredfl-date-time ((t (:weight light :foreground "#66d9ef"))))
 '(diredfl-deletion ((t (:weight bold :foreground "#e74c3c" :background "#2e0f0c"))))
 '(diredfl-deletion-file-name ((t (:foreground "#e74c3c" :background "#2e0f0c"))))
 '(diredfl-dir-heading ((t (:weight bold :foreground "#268bd2"))))
 '(diredfl-dir-name ((t (:foreground "#268bd2"))))
 '(diredfl-dir-priv ((t (:foreground "#268bd2"))))
 '(diredfl-exec-priv ((t (:foreground "#b6e63e"))))
 '(diredfl-executable-tag ((t (:foreground "#b6e63e"))))
 '(diredfl-file-name ((t (:foreground "#d6d6d4"))))
 '(diredfl-file-suffix ((t (:foreground "#80807f"))))
 '(diredfl-flag-mark ((t (:weight bold :foreground "#e2c770" :background "#2d2716"))))
 '(diredfl-flag-mark-line ((t (:background "#16130b"))))
 '(diredfl-ignored-file-name ((t (:foreground "#555556"))))
 '(diredfl-link-priv ((t (:foreground "#9c91e4"))))
 '(diredfl-no-priv ((t (:inherit (shadow)))))
 '(diredfl-number ((t (:foreground "#fd971f"))))
 '(diredfl-other-priv ((t (:foreground "#eb4509"))))
 '(diredfl-rare-priv ((t (:foreground "#d6d6d4"))))
 '(diredfl-read-priv ((t (:foreground "#e2c770"))))
 '(diredfl-symlink ((t (:foreground "#9c91e4"))))
 '(diredfl-tagged-autofile-name ((t (:foreground "#555556"))))
 '(diredfl-write-priv ((t (:foreground "#e74c3c"))))
 '(doom-dashboard-banner ((t (:inherit (font-lock-comment-face)))))
 '(doom-dashboard-footer ((t (:inherit (font-lock-keyword-face)))))
 '(doom-dashboard-footer-icon ((t (:inherit (all-the-icons-green)))))
 '(doom-dashboard-loaded ((t (:inherit (font-lock-comment-face)))))
 '(doom-dashboard-menu-desc ((t (:inherit (font-lock-constant-face)))))
 '(doom-dashboard-menu-title ((t (:inherit (font-lock-keyword-face)))))
 '(doom-modeline-bar ((t (:background "#b6e63e"))))
 '(doom-modeline-bar-inactive ((t (:background "#4e4e4e"))))
 '(doom-modeline-battery-charging ((t (:weight normal :inherit (success)))))
 '(doom-modeline-battery-critical ((t (:weight normal :inherit (error)))))
 '(doom-modeline-battery-error ((t (:weight normal :inherit (error)))))
 '(doom-modeline-battery-full ((t (:weight normal :inherit (success)))))
 '(doom-modeline-battery-normal ((t (:weight normal :inherit (mode-line)))))
 '(doom-modeline-battery-warning ((t (:weight normal :inherit (warning)))))
 '(doom-modeline-buffer-file ((t (:inherit (org-level-8)))))
 '(doom-modeline-buffer-major-mode ((t (:inherit (doom-modeline-emphasis bold)))))
 '(doom-modeline-buffer-minor-mode ((t (:slant normal :inherit (font-lock-doc-face)))))
 '(doom-modeline-buffer-modified ((t (:foreground "#e74c3c" :inherit (bold)))))
 '(doom-modeline-buffer-path ((t (:foreground "#b6e63e" :inherit (bold)))))
 '(doom-modeline-buffer-timemachine ((t (:slant italic :inherit (doom-modeline-buffer-file)))))
 '(doom-modeline-compilation ((t (:height 0.9 :slant italic :inherit (warning)))))
 '(doom-modeline-debug ((t (:slant normal :inherit (font-lock-doc-face bold)))))
 '(doom-modeline-debug-visual ((((background light)) (:foreground "#D4843E")) (((background dark)) (:foreground "#915B2D"))))
 '(doom-modeline-emphasis ((t (:inherit (mode-line-emphasis)))))
 '(doom-modeline-evil-emacs-state ((t (:inherit (font-lock-builtin-face bold)))))
 '(doom-modeline-evil-insert-state ((t (:inherit (font-lock-keyword-face bold)))))
 '(doom-modeline-evil-motion-state ((t (:slant normal :inherit (font-lock-doc-face bold)))))
 '(doom-modeline-evil-normal-state ((t (:inherit (doom-modeline-info)))))
 '(doom-modeline-evil-operator-state ((t (:inherit (doom-modeline-buffer-file)))))
 '(doom-modeline-evil-replace-state ((t (:inherit (doom-modeline-urgent)))))
 '(doom-modeline-evil-visual-state ((t (:inherit (doom-modeline-warning)))))
 '(doom-modeline-highlight ((t (:inherit (mode-line-highlight)))))
 '(doom-modeline-host ((t (:inherit (italic)))))
 '(doom-modeline-info ((t (:inherit (success bold)))))
 '(doom-modeline-input-method ((t (:inherit (doom-modeline-emphasis bold)))))
 '(doom-modeline-input-method-alt ((t (:slant normal :inherit (font-lock-doc-face bold)))))
 '(doom-modeline-lsp-error ((t (:weight normal :inherit (error)))))
 '(doom-modeline-lsp-running ((t (:slant normal :weight normal :inherit (compilation-mode-line-run)))))
 '(doom-modeline-lsp-success ((t (:weight normal :inherit (success)))))
 '(doom-modeline-lsp-warning ((t (:weight normal :inherit (warning)))))
 '(doom-modeline-notification ((t (:inherit (doom-modeline-warning)))))
 '(doom-modeline-panel ((t (:inherit (doom-modeline-highlight)))))
 '(doom-modeline-persp-name ((t (:inherit (font-lock-comment-face italic)))))
 '(doom-modeline-project-dir ((t (:inherit (font-lock-string-face bold)))))
 '(doom-modeline-project-parent-dir ((t (:inherit (font-lock-comment-face bold)))))
 '(doom-modeline-project-root-dir ((t (:inherit (doom-modeline-emphasis bold)))))
 '(doom-modeline-repl-success ((t (:weight normal :inherit (success)))))
 '(doom-modeline-repl-warning ((t (:weight normal :inherit (warning)))))
 '(doom-modeline-time ((t (:inherit (mode-line-buffer-id bold)))))
 '(doom-modeline-unread-number ((t (:weight normal :slant italic))))
 '(doom-modeline-urgent ((t (:inherit (error bold)))))
 '(doom-modeline-warning ((t (:inherit (warning bold)))))
 '(doom-themes-org-at-tag ((t (:inherit (org-formula)))))
 '(doom-themes-org-hash-tag ((t (:inherit (org-tag)))))
 '(edebug-disabled-breakpoint ((((class color) (min-colors 88) (background light)) (:extend t :background "#ddffdd")) (((class color) (min-colors 88) (background dark)) (:extend t :background "#335533"))))
 '(edebug-enabled-breakpoint ((t (:inherit (highlight)))))
 '(ediff-current-diff-A ((t (:extend t :background "#191919"))))
 '(ediff-current-diff-Ancestor ((((class color) (min-colors 88) (background light)) (:extend t :background "#cfdeee")) (((class color) (min-colors 88) (background dark)) (:extend t :background "#004151")) (((class color) (min-colors 16) (background light)) (:extend t :background "#cfdeee")) (((class color) (min-colors 16) (background dark)) (:extend t :background "#004151")) (((class color)) (:extend t :background "magenta3" :foreground "black")) (t (:extend t :inverse-video t))))
 '(ediff-current-diff-B ((t (:inherit (ediff-current-diff-A)))))
 '(ediff-current-diff-C ((t (:inherit (ediff-current-diff-A)))))
 '(ediff-even-diff-A ((t (:inherit (hl-line)))))
 '(ediff-even-diff-Ancestor ((((type pc)) (:extend t :background "light grey" :foreground "cyan3")) (((class color) (min-colors 88) (background light)) (:extend t :background "Grey" :distant-foreground "Black")) (((class color) (min-colors 88) (background dark)) (:extend t :background "dim grey" :distant-foreground "White")) (((class color) (min-colors 16)) (:extend t :background "Grey" :foreground "White")) (((class color)) (:extend t :weight bold :background "light grey" :foreground "cyan3")) (t (:extend t :stipple "Stipple" :italic t))))
 '(ediff-even-diff-B ((t (:inherit (ediff-even-diff-A)))))
 '(ediff-even-diff-C ((t (:inherit (ediff-even-diff-A)))))
 '(ediff-fine-diff-A ((t (:weight bold :background "#461402"))))
 '(ediff-fine-diff-Ancestor ((((class color) (min-colors 88) (background light)) (:background "#00c5c0")) (((class color) (min-colors 88) (background dark)) (:background "#009591")) (((class color) (min-colors 16) (background light)) (:background "#00c5c0")) (((class color) (min-colors 16) (background dark)) (:background "#009591")) (((class color)) (:background "green" :foreground "red3")) (t (:stipple "gray3" :underline (:color foreground-color :style line)))))
 '(ediff-fine-diff-B ((t (:inherit (ediff-fine-diff-A)))))
 '(ediff-fine-diff-C ((t (:inherit (ediff-fine-diff-A)))))
 '(ediff-odd-diff-A ((t (:inherit (ediff-even-diff-A)))))
 '(ediff-odd-diff-Ancestor ((((class color) (min-colors 88)) (:extend t :background "gray40")) (((class color) (min-colors 16)) (:extend t :background "gray40" :foreground "cyan3")) (((class color)) (:extend t :weight bold :background "black" :foreground "green3")) (t (:extend t :stipple "gray1" :italic t))))
 '(ediff-odd-diff-B ((t (:inherit (ediff-odd-diff-A)))))
 '(ediff-odd-diff-C ((t (:inherit (ediff-odd-diff-A)))))
 '(edit-indirect-edited-region ((t (:inherit (secondary-selection)))))
 '(eglot-diagnostic-tag-deprecated-face ((t (:strike-through t :inherit (shadow)))))
 '(eglot-diagnostic-tag-unnecessary-face ((t (:inherit (shadow)))))
 '(eglot-highlight-symbol-face ((t (:distant-foreground "#1B2229" :background "#4b2d09" :weight bold :foreground "#ffffff"))))
 '(eglot-mode-line ((t (:weight bold :inherit (font-lock-constant-face)))))
 '(eieio-custom-slot-tag-face ((((class color) (background dark)) (:foreground "light blue")) (((class color) (background light)) (:foreground "blue")) (t (:italic t))))
 '(eldoc-highlight-function-argument ((t (:inherit (bold)))))
 '(elisp-shorthand-font-lock-face ((t (:foreground "cyan" :inherit (font-lock-keyword-face)))))
 '(embrace-help-key-face ((t (:inherit (font-lock-constant-face) :bold t))))
 '(embrace-help-mark-func-face ((t (:inherit (font-lock-function-name-face)))))
 '(embrace-help-pair-face ((t (:inherit (font-lock-function-name-face) :inverse-video t))))
 '(embrace-help-separator-face ((t (:inherit (font-lock-comment-face)))))
 '(epa-field-body ((default (:slant italic)) (((class color) (background dark)) (:foreground "turquoise"))))
 '(epa-field-name ((default (:weight bold)) (((class color) (background dark)) (:foreground "PaleTurquoise"))))
 '(epa-mark ((default (:weight bold)) (((class color) (background dark)) (:foreground "orange")) (((class color) (background light)) (:foreground "red"))))
 '(epa-string ((((class color) (background dark)) (:foreground "lightyellow")) (((class color) (background light)) (:foreground "blue4"))))
 '(epa-validity-disabled ((t (:inverse-video t :slant italic))))
 '(epa-validity-high ((default (:weight bold)) (((class color) (background dark)) (:foreground "PaleTurquoise"))))
 '(epa-validity-low ((t (:slant italic))))
 '(epa-validity-medium ((default (:slant italic)) (((class color) (background dark)) (:foreground "PaleTurquoise"))))
 '(eros-result-overlay-face ((((class color) (background light)) (:box (:line-width (1 . -1) :color "yellow" :style nil) :background "grey90")) (((class color) (background dark)) (:box (:line-width (1 . -1) :color "black" :style nil) :background "grey10"))))
 '(error ((t (:foreground "#e74c3c"))))
 '(evil-embrace-section-title-face ((t (:inherit (font-lock-doc-face)))))
 '(evil-ex-commands ((nil (:slant italic :underline (:color foreground-color :style line)))))
 '(evil-ex-info ((t (:slant italic :foreground "#e74c3c"))))
 '(evil-ex-lazy-highlight ((t (:inherit (lazy-highlight)))))
 '(evil-ex-search ((t (:weight bold :foreground "#1B2229" :background "#fd971f"))))
 '(evil-ex-substitute-matches ((t (:weight bold :strike-through t :foreground "#e74c3c" :background "#1B2229"))))
 '(evil-ex-substitute-replacement ((t (:weight bold :foreground "#b6e63e" :background "#1B2229"))))
 '(evil-goggles--pulse-face ((t nil)))
 '(evil-goggles-change-face ((t (:inherit (evil-goggles-default-face)))))
 '(evil-goggles-commentary-face ((t (:inherit (evil-goggles-default-face)))))
 '(evil-goggles-default-face ((t (:background "#272727" :inherit (region)))))
 '(evil-goggles-delete-face ((t (:inherit (evil-goggles-default-face)))))
 '(evil-goggles-fill-and-move-face ((t (:inherit (evil-goggles-default-face)))))
 '(evil-goggles-indent-face ((t (:inherit (evil-goggles-default-face)))))
 '(evil-goggles-join-face ((t (:inherit (evil-goggles-default-face)))))
 '(evil-goggles-nerd-commenter-face ((t (:inherit (evil-goggles-default-face)))))
 '(evil-goggles-paste-face ((t (:inherit (evil-goggles-default-face)))))
 '(evil-goggles-record-macro-face ((t (:inherit (evil-goggles-default-face)))))
 '(evil-goggles-set-marker-face ((t (:inherit (evil-goggles-default-face)))))
 '(evil-goggles-shift-face ((t (:inherit (evil-goggles-default-face)))))
 '(evil-goggles-surround-face ((t (:inherit (evil-goggles-default-face)))))
 '(evil-goggles-yank-face ((t (:inherit (evil-goggles-default-face)))))
 '(evil-snipe-first-match-face ((t (:foreground "#1B2229" :background "#b6e63e"))))
 '(evil-snipe-matches-face ((t (:underline (:color foreground-color :style line) :foreground "#b6e63e"))))
 '(evil-traces-change ((t (:inherit (evil-traces-default)))))
 '(evil-traces-copy-preview ((t (:inherit (evil-traces-default)))))
 '(evil-traces-copy-range ((t (:inherit (evil-traces-default)))))
 '(evil-traces-default ((t (:inherit (region)))))
 '(evil-traces-delete ((t (:inherit (evil-traces-default)))))
 '(evil-traces-global-match ((t (:inherit (isearch)))))
 '(evil-traces-global-range ((t (:inherit (evil-traces-default)))))
 '(evil-traces-join-indicator ((t nil)))
 '(evil-traces-join-range ((t (:inherit (evil-traces-default)))))
 '(evil-traces-move-preview ((t (:inherit (evil-traces-default)))))
 '(evil-traces-move-range ((t (:inherit (evil-traces-default)))))
 '(evil-traces-normal ((t (:inherit (evil-traces-default)))))
 '(evil-traces-shell-command ((t (:inherit (evil-traces-default)))))
 '(evil-traces-sort ((t (:inherit (evil-traces-default)))))
 '(evil-traces-substitute-range ((t (:inherit (evil-traces-default)))))
 '(evil-traces-yank ((t (:inherit (evil-traces-default)))))
 '(eww-form-checkbox ((t (:inherit (eww-form-file)))))
 '(eww-form-file ((t (:background "#171717" :inherit (eww-form-submit)))))
 '(eww-form-select ((t (:background "#171717" :inherit (eww-form-submit)))))
 '(eww-form-submit ((t (:box (:line-width (2 . 2) :color nil :style released-button) :background "#1d1f20" :inherit (eww-form-text)))))
 '(eww-form-text ((t (:box (:line-width (1 . 1) :color "#2d2e2e" :style nil) :foreground "#d6d6d4" :background "#000000"))))
 '(eww-form-textarea ((t (:inherit (eww-form-text)))))
 '(eww-invalid-certificate ((t (:foreground "#e74c3c"))))
 '(eww-valid-certificate ((t (:foreground "#fd971f"))))
 '(file-name-shadow ((t (:inherit (shadow)))))
 '(fill-column-indicator ((t (:stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :inherit (shadow)))))
 '(fixed-pitch-serif ((t (:family "Monospace Serif"))))
 '(flycheck-delimited-error ((t nil)))
 '(flycheck-error ((t (:underline (:color "#e74c3c" :style wave) :background "#2d2e2e"))))
 '(flycheck-error-delimiter ((t nil)))
 '(flycheck-error-list-checker-name ((t (:inherit (font-lock-function-name-face)))))
 '(flycheck-error-list-column-number ((t nil)))
 '(flycheck-error-list-error ((t (:inherit (error)))))
 '(flycheck-error-list-error-message ((t nil)))
 '(flycheck-error-list-filename ((t (:weight normal :inherit (mode-line-buffer-id)))))
 '(flycheck-error-list-highlight ((t (:bold t))))
 '(flycheck-error-list-id ((t (:inherit (font-lock-type-face)))))
 '(flycheck-error-list-id-with-explainer ((t (:box (:line-width (1 . 1) :color nil :style released-button) :inherit (flycheck-error-list-id)))))
 '(flycheck-error-list-info ((t (:inherit (success)))))
 '(flycheck-error-list-line-number ((t nil)))
 '(flycheck-error-list-warning ((t (:inherit (warning)))))
 '(flycheck-fringe-error ((t (:foreground "#e74c3c" :inherit (fringe)))))
 '(flycheck-fringe-info ((t (:foreground "#b6e63e" :inherit (fringe)))))
 '(flycheck-fringe-warning ((t (:foreground "#e2c770" :inherit (fringe)))))
 '(flycheck-info ((t (:underline (:color "#b6e63e" :style wave) :background "#2d2e2e"))))
 '(flycheck-verify-select-checker ((t (:box (:line-width (1 . 1) :color nil :style released-button)))))
 '(flycheck-warning ((t (:underline (:color "#e2c770" :style wave) :background "#2d2e2e"))))
 '(flyspell-duplicate ((t (:underline (:color "#e2c770" :style wave)))))
 '(flyspell-incorrect ((t (:underline (:color "#e74c3c" :style wave)))))
 '(fountain ((t nil)))
 '(fountain-action ((t nil)))
 '(fountain-center ((t nil)))
 '(fountain-character ((t (:inherit (font-lock-variable-name-face)))))
 '(fountain-comment ((t (:inherit (shadow)))))
 '(fountain-dialog ((t (:inherit (font-lock-string-face)))))
 '(fountain-metadata-key ((t (:inherit (font-lock-keyword-face)))))
 '(fountain-metadata-value ((t (:inherit (font-lock-string-face)))))
 '(fountain-non-printing ((t (:inherit (fountain-comment)))))
 '(fountain-note ((t (:inherit (font-lock-comment-face) :extend t))))
 '(fountain-page-break ((t (:inherit (font-lock-constant-face)))))
 '(fountain-paren ((t (:inherit (font-lock-string-face)))))
 '(fountain-scene-heading ((t (:inherit (font-lock-function-name-face)))))
 '(fountain-section-heading-1 ((t (:inherit (outline-1)))))
 '(fountain-section-heading-2 ((t (:inherit (outline-2)))))
 '(fountain-section-heading-3 ((t (:inherit (outline-3)))))
 '(fountain-section-heading-4 ((t (:inherit (outline-4)))))
 '(fountain-section-heading-5 ((t (:inherit (outline-5)))))
 '(fountain-synopsis ((t (:inherit (font-lock-type-face)))))
 '(fountain-trans ((t nil)))
 '(git-commit-comment-action ((t (:inherit (bold)))))
 '(git-commit-comment-branch-local ((t (:foreground "#eb4509"))))
 '(git-commit-comment-branch-remote ((t (:foreground "#b6e63e"))))
 '(git-commit-comment-detached ((t (:foreground "#fd971f"))))
 '(git-commit-comment-file ((t (:foreground "#9c91e4"))))
 '(git-commit-comment-heading ((t (:foreground "#eb4509"))))
 '(git-commit-keyword ((t (:slant italic :foreground "#66d9ef"))))
 '(git-commit-known-pseudo-header ((t (:weight bold :slant italic :foreground "#7f7f80"))))
 '(git-commit-nonempty-second-line ((t (:inherit (git-commit-overlong-summary)))))
 '(git-commit-overlong-summary ((t (:weight bold :slant italic :background "#1B2229" :inherit (error)))))
 '(git-commit-pseudo-header ((t (:slant italic :foreground "#7f7f80"))))
 '(git-commit-summary ((t (:foreground "#e2c770"))))
 '(git-gutter-fr:added ((t (:foreground "#9ac334" :inherit (fringe)))))
 '(git-gutter-fr:deleted ((t (:foreground "#e74c3c" :inherit (fringe)))))
 '(git-gutter-fr:modified ((t (:foreground "#4e4e4e" :inherit (fringe)))))
 '(git-gutter:added ((t (:foreground "#9ac334" :inherit (fringe)))))
 '(git-gutter:deleted ((t (:foreground "#e74c3c" :inherit (fringe)))))
 '(git-gutter:modified ((t (:foreground "#4e4e4e" :inherit (fringe)))))
 '(git-gutter:separator ((t (:inherit (default) :weight bold :foreground "cyan"))))
 '(git-gutter:unchanged ((t (:inherit (default) :background "yellow"))))
 '(glyphless-char ((((type tty)) (:inherit (underline))) (((type pc)) (:inherit (escape-glyph))) (t (:height 0.6))))
 '(gnus-group-mail-1 ((t (:weight bold :foreground "#d6d6d4"))))
 '(gnus-group-mail-1-empty ((t (:foreground "#555556"))))
 '(gnus-group-mail-2 ((t (:inherit (gnus-group-mail-1)))))
 '(gnus-group-mail-2-empty ((t (:inherit (gnus-group-mail-1-empty)))))
 '(gnus-group-mail-3 ((t (:inherit (gnus-group-mail-1)))))
 '(gnus-group-mail-3-empty ((t (:inherit (gnus-group-mail-1-empty)))))
 '(gnus-group-mail-low ((t (:weight normal :inherit (gnus-group-mail-1)))))
 '(gnus-group-mail-low-empty ((t (:inherit (gnus-group-mail-1-empty)))))
 '(gnus-group-news-1 ((t (:inherit (gnus-group-mail-1)))))
 '(gnus-group-news-1-empty ((t (:inherit (gnus-group-mail-1-empty)))))
 '(gnus-group-news-2 ((t (:inherit (gnus-group-news-1)))))
 '(gnus-group-news-2-empty ((t (:inherit (gnus-group-news-1-empty)))))
 '(gnus-group-news-3 ((t (:inherit (gnus-group-news-1)))))
 '(gnus-group-news-3-empty ((t (:inherit (gnus-group-news-1-empty)))))
 '(gnus-group-news-4 ((t (:inherit (gnus-group-news-1)))))
 '(gnus-group-news-4-empty ((t (:inherit (gnus-group-news-1-empty)))))
 '(gnus-group-news-5 ((t (:inherit (gnus-group-news-1)))))
 '(gnus-group-news-5-empty ((t (:inherit (gnus-group-news-1-empty)))))
 '(gnus-group-news-6 ((t (:inherit (gnus-group-news-1)))))
 '(gnus-group-news-6-empty ((t (:inherit (gnus-group-news-1-empty)))))
 '(gnus-group-news-low ((t (:foreground "#555556" :inherit (gnus-group-mail-1)))))
 '(gnus-group-news-low-empty ((t (:weight normal :inherit (gnus-group-news-low)))))
 '(gnus-splash ((((class color) (background dark)) (:foreground "#cccccc")) (((class color) (background light)) (:foreground "#888888")) (t nil)))
 '(gnus-summary-cancelled ((t (:extend t :strike-through t :foreground "#e74c3c"))))
 '(gnus-summary-high-ancient ((t (:foreground "#767677" :inherit (italic)))))
 '(gnus-summary-high-read ((t (:foreground "#dededc"))))
 '(gnus-summary-high-ticked ((t (:foreground "#ef6a3a"))))
 '(gnus-summary-high-undownloaded ((t (:bold t :inherit (gnus-summary-normal-undownloaded)))))
 '(gnus-summary-high-unread ((t (:foreground "#c4eb64"))))
 '(gnus-summary-low-ancient ((t (:foreground "#444444" :inherit (italic)))))
 '(gnus-summary-low-read ((t (:foreground "#ababa9"))))
 '(gnus-summary-low-ticked ((t (:foreground "#bc3707"))))
 '(gnus-summary-low-undownloaded ((t (:italic t :inherit (gnus-summary-normal-undownloaded)))))
 '(gnus-summary-low-unread ((t (:foreground "#91b831"))))
 '(gnus-summary-normal-ancient ((t (:extend t :foreground "#555556" :inherit (italic)))))
 '(gnus-summary-normal-read ((t (:extend t :foreground "#d6d6d4"))))
 '(gnus-summary-normal-ticked ((t (:extend t :foreground "#eb4509"))))
 '(gnus-summary-normal-undownloaded ((t (:weight normal :extend t :foreground "LightGray"))))
 '(gnus-summary-normal-unread ((t (:extend t :foreground "#b6e63e" :inherit (bold)))))
 '(gnus-summary-selected ((t (:weight bold :extend t :foreground "#268bd2"))))
 '(header-line-highlight ((t (:inherit (mode-line-highlight)))))
 '(help-argument-name ((t (:inherit (italic)))))
 '(help-for-help-header ((t (:height 1.26))))
 '(help-key-binding ((((class color) (min-colors 88) (background light)) (:box (:line-width (1 . -1) :color "grey80" :style nil) :foreground "DarkBlue" :background "grey96")) (((class color) (min-colors 88) (background dark)) (:box (:line-width (1 . -1) :color "grey35" :style nil) :foreground "LightBlue" :background "grey19")) (((class color grayscale) (background light)) (:background "grey90")) (((class color grayscale) (background dark)) (:background "grey25")) (t (:background "grey90"))))
 '(helpful-heading ((t (:height 1.2 :weight bold))))
 '(highlight-numbers-number ((t (:foreground "#9c91e4" :inherit (bold)))))
 '(highlight-quoted-quote ((t (:foreground "#9c91e4"))))
 '(highlight-quoted-symbol ((t (:foreground "#66d9ef"))))
 '(hl-line ((t (:weight bold :extend t :inherit (hl-line)))))
 '(hl-todo ((t (:weight bold :foreground "#e74c3c"))))
 '(hlt-property-highlight ((((background dark)) (:background "Navy")) (t (:background "Wheat"))))
 '(hlt-regexp-level-1 ((((background dark)) (:background "#071F473A0000")) (t (:background "#FA6CC847FFFF"))))
 '(hlt-regexp-level-2 ((((background dark)) (:background "#507400002839")) (t (:background "#C847FFFFE423"))))
 '(hlt-regexp-level-3 ((((background dark)) (:background "#4517305D0000")) (t (:background "#C847D8FEFFFF"))))
 '(hlt-regexp-level-4 ((((background dark)) (:background "#176900004E0A")) (t (:background "#EF47FFFFC847"))))
 '(hlt-regexp-level-5 ((((background dark)) (:background "#04602BC00000")) (t (:background "#FCFCE1E1FFFF"))))
 '(hlt-regexp-level-6 ((((background dark)) (:background "#32F200001979")) (t (:background "#E1E1FFFFF0F0"))))
 '(hlt-regexp-level-7 ((((background dark)) (:background "#316B22970000")) (t (:background "#E1E1EAEAFFFF"))))
 '(hlt-regexp-level-8 ((((background dark)) (:background "#12EC00003F0E")) (t (:background "#F6F5FFFFE1E1"))))
 '(holiday ((((class color) (background light)) (:background "pink")) (((class color) (background dark)) (:background "chocolate4")) (t (:inverse-video t))))
 '(hydra-face-amaranth ((t (:weight bold :foreground "#eb4509"))))
 '(hydra-face-blue ((t (:weight bold :foreground "#268bd2"))))
 '(hydra-face-pink ((t (:weight bold :foreground "#9c91e4"))))
 '(hydra-face-red ((t (:weight bold :foreground "#e74c3c"))))
 '(hydra-face-teal ((t (:weight bold :foreground "#b6e63e"))))
 '(ibuffer-locked-buffer ((((background dark)) (:foreground "RosyBrown")) (t (:foreground "brown4"))))
 '(info-header-node ((t (:inherit (info-node)))))
 '(info-header-xref ((t (:inherit (info-xref)))))
 '(info-index-match ((t (:inherit (match)))))
 '(info-menu-header ((((type tty pc)) (:weight bold :underline (:color foreground-color :style line))) (t (:weight bold :inherit (variable-pitch)))))
 '(info-menu-star ((((class color)) (:foreground "red1")) (t (:underline (:color foreground-color :style line)))))
 '(info-node ((((class color) (background light)) (:slant italic :weight bold :foreground "brown")) (((class color) (background dark)) (:slant italic :weight bold :foreground "white")) (t (:slant italic :weight bold))))
 '(info-title-1 ((((type tty pc) (class color) (background light)) (:weight bold :foreground "green")) (((type tty pc) (class color) (background dark)) (:weight bold :foreground "yellow")) (t (:inherit (info-title-2) :height 1.2))))
 '(info-title-2 ((((type tty pc) (class color)) (:weight bold :foreground "lightblue")) (t (:inherit (info-title-3) :height 1.2))))
 '(info-title-3 ((((type tty pc) (class color)) (:weight bold)) (t (:inherit (info-title-4) :height 1.2))))
 '(info-title-4 ((((type tty pc) (class color)) (:weight bold)) (t (:inherit (variable-pitch) :weight bold))))
 '(info-xref ((t (:inherit (link)))))
 '(info-xref-visited ((t (:inherit (link-visited info-xref)))))
 '(internal-border ((t nil)))
 '(isearch-group-1 ((((class color) (min-colors 88) (background light)) (:foreground "lightskyblue1" :background "#f000f0")) (((class color) (min-colors 88) (background dark)) (:foreground "brown4" :background "palevioletred1")) (t (:inherit (isearch)))))
 '(isearch-group-2 ((((class color) (min-colors 88) (background light)) (:foreground "lightskyblue1" :background "#a000a0")) (((class color) (min-colors 88) (background dark)) (:foreground "brown4" :background "palevioletred3")) (t (:inherit (isearch)))))
 '(italic ((((supports :slant italic)) (:slant italic)) (((supports :underline t)) (:underline (:color foreground-color :style line))) (t (:slant italic))))
 '(jupyter-eval-overlay ((((class color) (min-colors 88) (background light)) (:weight bold :foreground "navy")) (((class color) (min-colors 88) (background dark)) (:weight bold :foreground "dodger blue"))))
 '(jupyter-repl-input-prompt ((((class color) (min-colors 88) (background light)) (:foreground "darkseagreen2")) (((class color) (min-colors 88) (background dark)) (:foreground "darkolivegreen"))))
 '(jupyter-repl-output-prompt ((((class color) (min-colors 88) (background light)) (:foreground "indianred3")) (((class color) (min-colors 88) (background dark)) (:foreground "darkred"))))
 '(jupyter-repl-traceback ((((class color) (min-colors 88) (background light)) (:background "LightYellow2")) (((class color) (min-colors 88) (background dark)) (:background "firebrick"))))
 '(kc-org-checkbox-done-text ((t (:inherit (org-done)))))
 '(kc-org-link-url ((t (:underline (:color foreground-color :style line) :foreground "VioletRed"))))
 '(kc-pulsar-face ((t (:foreground "black" :background "orangered4"))))
 '(ledger-font-C-amount-face ((t (:inherit (default)))))
 '(ledger-font-C-directive-face ((t (:inherit (ledger-font-directive-face)))))
 '(ledger-font-D-directive-face ((t (:inherit (ledger-font-directive-face)))))
 '(ledger-font-N-directive-face ((t (:inherit (ledger-font-directive-face)))))
 '(ledger-font-N-symbol-face ((t (:inherit (default)))))
 '(ledger-font-account-directive-face ((t (:inherit (ledger-font-directive-face)))))
 '(ledger-font-account-name-face ((t (:inherit (font-lock-variable-name-face)))))
 '(ledger-font-alias-definition-face ((t (:inherit (default)))))
 '(ledger-font-alias-directive-face ((t (:inherit (ledger-font-directive-face)))))
 '(ledger-font-apply-account-face ((t (:inherit (default)))))
 '(ledger-font-apply-directive-face ((t (:inherit (ledger-font-directive-face)))))
 '(ledger-font-apply-tag-face ((t (:inherit (default)))))
 '(ledger-font-assert-condition-face ((t (:inherit (ledger-font-condition-face)))))
 '(ledger-font-assert-directive-face ((t (:inherit (ledger-font-directive-face)))))
 '(ledger-font-auto-xact-face ((t (:inherit (font-lock-negation-char-face)))))
 '(ledger-font-bucket-account-face ((t (:inherit (default)))))
 '(ledger-font-bucket-directive-face ((t (:inherit (ledger-font-directive-face)))))
 '(ledger-font-capture-account-face ((t (:inherit (default)))))
 '(ledger-font-capture-directive-face ((t (:inherit (ledger-font-directive-face)))))
 '(ledger-font-capture-regex-face ((t (:inherit (default)))))
 '(ledger-font-check-condition-face ((t (:inherit (ledger-font-condition-face)))))
 '(ledger-font-check-directive-face ((t (:inherit (ledger-font-directive-face)))))
 '(ledger-font-code-face ((t (:inherit (default)))))
 '(ledger-font-comment-face ((t (:inherit (font-lock-comment-face)))))
 '(ledger-font-commodity-directive-face ((t (:inherit (ledger-font-directive-face)))))
 '(ledger-font-commodity-format-face ((t (:inherit (default)))))
 '(ledger-font-commodity-name-face ((t (:inherit (font-lock-constant-face)))))
 '(ledger-font-condition-face ((t (:inherit (default)))))
 '(ledger-font-default-directive-face ((t (:inherit (ledger-font-directive-face)))))
 '(ledger-font-define-body-face ((t (:inherit (default)))))
 '(ledger-font-define-directive-face ((t (:inherit (ledger-font-directive-face)))))
 '(ledger-font-define-name-face ((t (:inherit (font-lock-variable-name-face)))))
 '(ledger-font-directive-face ((t (:inherit (font-lock-preprocessor-face)))))
 '(ledger-font-end-directive-face ((t (:inherit (ledger-font-directive-face)))))
 '(ledger-font-expr-directive-face ((t (:inherit (ledger-font-directive-face)))))
 '(ledger-font-expr-expression-face ((t (:inherit (default)))))
 '(ledger-font-fixed-commodity-face ((t (:inherit (font-lock-constant-face)))))
 '(ledger-font-fixed-directive-face ((t (:inherit (ledger-font-directive-face)))))
 '(ledger-font-fixed-price-face ((t (:inherit (default)))))
 '(ledger-font-format-directive-face ((t (:inherit (ledger-font-directive-face)))))
 '(ledger-font-include-directive-face ((t (:inherit (ledger-font-directive-face)))))
 '(ledger-font-include-filename-face ((t (:inherit (font-lock-string-face)))))
 '(ledger-font-note-directive-face ((t (:inherit (ledger-font-directive-face)))))
 '(ledger-font-note-text-face ((t (:inherit (font-lock-doc-face)))))
 '(ledger-font-other-face ((t (:inherit (font-lock-type-face)))))
 '(ledger-font-payee-cleared-face ((t (:weight bold :foreground "#9c91e4"))))
 '(ledger-font-payee-directive-face ((t (:inherit (ledger-font-directive-face)))))
 '(ledger-font-payee-name-face ((t (:inherit (font-lock-function-name-face)))))
 '(ledger-font-payee-pending-face ((t (:inherit (ledger-font-pending-face)))))
 '(ledger-font-payee-regex-face ((t (:inherit (font-lock-string-face)))))
 '(ledger-font-payee-uncleared-face ((t (:weight bold :foreground "#555556"))))
 '(ledger-font-pending-face ((t (:inherit (warning)))))
 '(ledger-font-periodic-xact-face ((t (:inherit (font-lock-constant-face)))))
 '(ledger-font-posting-account-cleared-face ((t (:inherit (ledger-font-payee-cleared-face)))))
 '(ledger-font-posting-account-face ((t (:foreground "#ffffff"))))
 '(ledger-font-posting-account-pending-face ((t (:inherit (ledger-font-pending-face)))))
 '(ledger-font-posting-amount-cleared-face ((t (:inherit (ledger-font-posting-account-cleared-face)))))
 '(ledger-font-posting-amount-face ((t (:foreground "#e2c770"))))
 '(ledger-font-posting-amount-pending-face ((t (:inherit (ledger-font-posting-account-pending-face)))))
 '(ledger-font-posting-date-face ((t (:foreground "#268bd2"))))
 '(ledger-font-price-date-face ((t (:inherit (default)))))
 '(ledger-font-price-directive-face ((t (:inherit (ledger-font-directive-face)))))
 '(ledger-font-price-face ((t (:inherit (default)))))
 '(ledger-font-price-symbol-face ((t (:inherit (font-lock-constant-face)))))
 '(ledger-font-reconciler-cleared-face ((t (:inherit (ledger-font-payee-cleared-face)))))
 '(ledger-font-reconciler-pending-face ((t (:inherit (ledger-font-pending-face)))))
 '(ledger-font-reconciler-uncleared-face ((t (:inherit (ledger-font-payee-uncleared-face)))))
 '(ledger-font-report-clickable-face ((t nil)))
 '(ledger-font-tag-directive-face ((t (:inherit (ledger-font-directive-face)))))
 '(ledger-font-tag-name-face ((t (:inherit (font-lock-type-face)))))
 '(ledger-font-timeclock-directive-face ((t (:inherit (ledger-font-directive-face)))))
 '(ledger-font-uuid-directive-face ((t (:inherit (ledger-font-directive-face)))))
 '(ledger-font-uuid-face ((t (:inherit (default)))))
 '(ledger-font-xact-cleared-face ((t (:inherit (ledger-font-payee-cleared-face)))))
 '(ledger-font-xact-highlight-face ((t (:extend t :background "#1B2229"))))
 '(ledger-font-xact-pending-face ((t (:inherit (ledger-font-pending-face)))))
 '(ledger-font-year-directive-face ((t (:inherit (ledger-font-directive-face)))))
 '(ledger-font-year-face ((t (:inherit (default)))))
 '(ledger-occur-narrowed-face ((t (:invisible t :inherit (font-lock-comment-face)))))
 '(ledger-occur-xact-face ((t (:inherit (highlight)))))
 '(line-number ((t (:weight normal :slant italic :foreground "#555556" :inherit (default)))))
 '(line-number-current-line ((t (:foreground "red"))))
 '(line-number-major-tick ((((class color grayscale) (background light)) (:bold t :background "grey85")) (((class color grayscale) (background dark)) (:bold t :background "grey75")) (t (:inherit (line-number)))))
 '(line-number-minor-tick ((((class color grayscale) (background light)) (:bold t :background "grey95")) (((class color grayscale) (background dark)) (:bold t :background "grey55")) (t (:inherit (line-number)))))
 '(log-edit-header ((t (:inherit (font-lock-keyword-face)))))
 '(log-edit-summary ((t (:inherit (font-lock-function-name-face)))))
 '(log-edit-unknown-header ((t (:inherit (font-lock-comment-face)))))
 '(lv-separator ((((class color) (background light)) (:background "grey80")) (((class color) (background dark)) (:background "grey30"))))
 '(mac-ts-caret-position ((t (:inverse-video t))))
 '(mac-ts-converted-text ((((background dark)) (:underline (:color "gray60" :style line))) (t (:underline (:color "gray80" :style line)))))
 '(mac-ts-raw-text ((t (:underline (:color foreground-color :style line)))))
 '(mac-ts-selected-converted-text ((t (:underline (:color foreground-color :style line)))))
 '(magit-bisect-bad ((t (:foreground "#e74c3c"))))
 '(magit-bisect-good ((t (:foreground "#b6e63e"))))
 '(magit-bisect-skip ((t (:foreground "#fd971f"))))
 '(magit-blame-date ((t (:foreground "#e74c3c"))))
 '(magit-blame-dimmed ((t (:slant normal :weight normal :inherit (magit-dimmed)))))
 '(magit-blame-hash ((t (:foreground "#66d9ef"))))
 '(magit-blame-heading ((t (:extend t :foreground "#fd971f" :background "#2d2e2e"))))
 '(magit-blame-highlight ((((class color) (background light)) (:foreground "black" :background "grey80" :extend t)) (((class color) (background dark)) (:foreground "white" :background "grey25" :extend t))))
 '(magit-blame-margin ((t (:slant normal :weight normal :inherit (magit-blame-highlight)))))
 '(magit-blame-name ((t nil)))
 '(magit-blame-summary ((t nil)))
 '(magit-branch-current ((t (:foreground "magenta" :weight bold :inherit (magit-branch-current)))))
 '(magit-branch-local ((t (:foreground "#66d9ef"))))
 '(magit-branch-remote ((t (:foreground "#b6e63e"))))
 '(magit-branch-remote-head ((t (:box (:line-width (1 . 1) :color nil :style nil) :inherit (magit-branch-remote)))))
 '(magit-branch-upstream ((t (:slant italic))))
 '(magit-branch-warning ((t (:inherit (warning)))))
 '(magit-cherry-equivalent ((t (:foreground "#9c91e4"))))
 '(magit-cherry-unmatched ((t (:foreground "#66d9ef"))))
 '(magit-diff-added ((t (:extend t :foreground "#7b9c29" :background "#0f1305"))))
 '(magit-diff-added-highlight ((t (:weight bold :extend t :foreground "#9ac334" :background "#1e270a"))))
 '(magit-diff-base ((t (:extend t :foreground "#ca7818" :background "#190f03"))))
 '(magit-diff-base-highlight ((t (:weight bold :extend t :foreground "#fd971f" :background "#321e06"))))
 '(magit-diff-conflict-heading ((t (:inherit (magit-diff-hunk-heading)))))
 '(magit-diff-context ((t (:extend t :foreground "#80807f" :background "#000000"))))
 '(magit-diff-context-highlight ((t (:extend t :foreground "#d6d6d4" :background "#171717"))))
 '(magit-diff-file-heading ((t (:weight bold :extend t :foreground "#d6d6d4"))))
 '(magit-diff-file-heading-highlight ((t (:inherit (magit-section-highlight) :extend t))))
 '(magit-diff-file-heading-selection ((t (:weight bold :extend t :foreground "#eb4509" :background "#727280"))))
 '(magit-diff-hunk-heading ((t (:extend t :foreground "#000000" :background "#2e2b44"))))
 '(magit-diff-hunk-heading-highlight ((t (:weight bold :extend t :foreground "#000000" :background "#9c91e4"))))
 '(magit-diff-hunk-heading-selection ((((class color) (background light)) (:foreground "salmon4" :inherit (magit-diff-hunk-heading-highlight) :extend t)) (((class color) (background dark)) (:foreground "LightSalmon3" :inherit (magit-diff-hunk-heading-highlight) :extend t))))
 '(magit-diff-hunk-region ((t (:extend t :inherit (bold)))))
 '(magit-diff-lines-boundary ((t (:inherit (magit-diff-lines-heading) :extend t))))
 '(magit-diff-lines-heading ((t (:extend t :foreground "#e2c770" :background "#e74c3c"))))
 '(magit-diff-our ((t (:inherit (magit-diff-removed)))))
 '(magit-diff-our-highlight ((t (:inherit (magit-diff-removed-highlight)))))
 '(magit-diff-removed ((t (:extend t :foreground "#b83c30" :background "#3f312f"))))
 '(magit-diff-removed-highlight ((t (:weight bold :extend t :foreground "#e74c3c" :background "#523430"))))
 '(magit-diff-revision-summary ((t (:inherit (magit-diff-hunk-heading)))))
 '(magit-diff-revision-summary-highlight ((t (:inherit (magit-diff-hunk-heading-highlight)))))
 '(magit-diff-their ((t (:inherit (magit-diff-added)))))
 '(magit-diff-their-highlight ((t (:inherit (magit-diff-added-highlight)))))
 '(magit-diff-whitespace-warning ((t (:inherit (trailing-whitespace)))))
 '(magit-diffstat-added ((t (:foreground "#9ac334"))))
 '(magit-diffstat-removed ((t (:foreground "#e74c3c"))))
 '(magit-dimmed ((t (:foreground "#555556"))))
 '(magit-filename ((t (:foreground "#9c91e4"))))
 '(magit-hash ((t (:foreground "#555556"))))
 '(magit-head ((((class color) (background light)) (:inherit (magit-branch-local))) (((class color) (background dark)) (:inherit (magit-branch-local)))))
 '(magit-header-line ((t (:weight bold :box (:line-width (3 . 3) :color "#727280" :style nil) :foreground "#ffffff" :background "#727280"))))
 '(magit-header-line-key ((t (:inherit (font-lock-builtin-face)))))
 '(magit-header-line-log-select ((t (:inherit (bold)))))
 '(magit-keyword ((t (:inherit (font-lock-string-face)))))
 '(magit-keyword-squash ((t (:inherit (font-lock-warning-face)))))
 '(magit-log-author ((t (:foreground "#fd971f"))))
 '(magit-log-date ((t (:foreground "#268bd2"))))
 '(magit-log-graph ((t (:foreground "#555556"))))
 '(magit-mode-line-process ((t (:inherit (mode-line-emphasis)))))
 '(magit-mode-line-process-error ((t (:inherit (error)))))
 '(magit-popup-argument ((t (:inherit (font-lock-warning-face)))))
 '(magit-popup-disabled-argument ((t (:inherit (shadow)))))
 '(magit-popup-heading ((t (:inherit (font-lock-keyword-face)))))
 '(magit-popup-key ((t (:inherit (font-lock-builtin-face)))))
 '(magit-popup-option-value ((t (:inherit (font-lock-string-face)))))
 '(magit-process-ng ((t (:inherit (error)))))
 '(magit-process-ok ((t (:inherit (success)))))
 '(magit-reflog-amend ((t (:foreground "#eb4509"))))
 '(magit-reflog-checkout ((t (:foreground "#268bd2"))))
 '(magit-reflog-cherry-pick ((t (:foreground "#b6e63e"))))
 '(magit-reflog-commit ((t (:foreground "#b6e63e"))))
 '(magit-reflog-merge ((t (:foreground "#b6e63e"))))
 '(magit-reflog-other ((t (:foreground "#66d9ef"))))
 '(magit-reflog-rebase ((t (:foreground "#eb4509"))))
 '(magit-reflog-remote ((t (:foreground "#66d9ef"))))
 '(magit-reflog-reset ((t (:inherit (error)))))
 '(magit-refname ((t (:foreground "#555556"))))
 '(magit-refname-pullreq ((t (:inherit (magit-refname)))))
 '(magit-refname-stash ((t (:inherit (magit-refname)))))
 '(magit-refname-wip ((t (:inherit (magit-refname)))))
 '(magit-section-child-count ((t nil)))
 '(magit-section-heading ((t (:weight bold :extend t :foreground "#268bd2"))))
 '(magit-section-heading-selection ((t (:weight bold :extend t :foreground "#fd971f"))))
 '(magit-section-highlight ((t (:extend t :inherit (hl-line)))))
 '(magit-section-secondary-heading ((t (:weight bold :extend t :foreground "#9c91e4"))))
 '(magit-sequence-done ((t (:inherit (magit-hash)))))
 '(magit-sequence-drop ((t (:foreground "#e74c3c"))))
 '(magit-sequence-exec ((t (:inherit (magit-hash)))))
 '(magit-sequence-head ((t (:foreground "#268bd2"))))
 '(magit-sequence-onto ((t (:inherit (magit-sequence-done)))))
 '(magit-sequence-part ((t (:foreground "#fd971f"))))
 '(magit-sequence-pick ((t (:inherit (default)))))
 '(magit-sequence-stop ((t (:foreground "#b6e63e"))))
 '(magit-signature-bad ((t (:inherit (error)))))
 '(magit-signature-error ((t (:inherit (error)))))
 '(magit-signature-expired ((t (:foreground "#fd971f"))))
 '(magit-signature-expired-key ((t (:inherit (magit-signature-expired)))))
 '(magit-signature-good ((t (:inherit (success)))))
 '(magit-signature-revoked ((t (:foreground "#eb4509"))))
 '(magit-signature-untrusted ((t (:foreground "#e2c770"))))
 '(magit-tag ((t (:foreground "#e2c770"))))
 '(marginalia-archive ((t (:inherit (warning)))))
 '(marginalia-char ((t (:inherit (marginalia-key)))))
 '(marginalia-date ((t (:inherit (marginalia-key)))))
 '(marginalia-documentation ((t (:inherit (font-lock-doc-face)))))
 '(marginalia-file-name ((t (:inherit (marginalia-documentation)))))
 '(marginalia-file-owner ((t (:inherit (font-lock-preprocessor-face)))))
 '(marginalia-file-priv-dir ((t (:foreground "#268bd2"))))
 '(marginalia-file-priv-exec ((t (:foreground "#b6e63e"))))
 '(marginalia-file-priv-link ((t (:foreground "#9c91e4"))))
 '(marginalia-file-priv-no ((t (:inherit (shadow)))))
 '(marginalia-file-priv-other ((t (:foreground "#eb4509"))))
 '(marginalia-file-priv-rare ((t (:foreground "#d6d6d4"))))
 '(marginalia-file-priv-read ((t (:foreground "#e2c770"))))
 '(marginalia-file-priv-write ((t (:foreground "#e74c3c"))))
 '(marginalia-function ((t (:inherit (font-lock-function-name-face)))))
 '(marginalia-installed ((t (:inherit (success)))))
 '(marginalia-key ((t (:inherit (font-lock-keyword-face)))))
 '(marginalia-lighter ((t (:foreground "#9c91e4"))))
 '(marginalia-list ((t (:inherit (font-lock-constant-face)))))
 '(marginalia-mode ((t (:inherit (marginalia-key)))))
 '(marginalia-modified ((t (:inherit (font-lock-negation-char-face)))))
 '(marginalia-null ((t (:inherit (font-lock-comment-face)))))
 '(marginalia-number ((t (:foreground "#9c91e4"))))
 '(marginalia-off ((t (:inherit (error)))))
 '(marginalia-on ((t (:inherit (success)))))
 '(marginalia-size ((t (:foreground "#9c91e4"))))
 '(marginalia-string ((t (:inherit (font-lock-string-face)))))
 '(marginalia-symbol ((t (:inherit (font-lock-type-face)))))
 '(marginalia-true ((t (:inherit (font-lock-builtin-face)))))
 '(marginalia-type ((t (:inherit (marginalia-key)))))
 '(marginalia-value ((t (:inherit (marginalia-key)))))
 '(marginalia-version ((t (:inherit (marginalia-number)))))
 '(markdown-blockquote-face ((t (:foreground "#727280" :inherit (italic)))))
 '(markdown-bold-face ((t (:foreground "#fd971f" :inherit (bold)))))
 '(markdown-code-face ((t (:extend t :background "#27292a"))))
 '(markdown-comment-face ((t (:inherit (font-lock-comment-face)))))
 '(markdown-footnote-marker-face ((t (:inherit (markdown-markup-face)))))
 '(markdown-footnote-text-face ((t (:inherit (font-lock-comment-face)))))
 '(markdown-gfm-checkbox-face ((t (:inherit (font-lock-builtin-face)))))
 '(markdown-header-delimiter-face ((t (:inherit (markdown-header-face)))))
 '(markdown-header-face ((t (:foreground "#fd971f" :inherit (bold)))))
 '(markdown-header-face-1 ((t (:extend t :inherit (outline-1)))))
 '(markdown-header-face-2 ((t (:extend t :inherit (outline-2)))))
 '(markdown-header-face-3 ((t (:extend t :inherit (outline-3)))))
 '(markdown-header-face-4 ((t (:extend t :inherit (outline-4)))))
 '(markdown-header-face-5 ((t (:extend t :inherit (outline-5)))))
 '(markdown-header-face-6 ((t (:extend t :inherit (outline-6)))))
 '(markdown-header-rule-face ((t (:inherit (markdown-markup-face)))))
 '(markdown-highlight-face ((t (:inherit (highlight)))))
 '(markdown-highlighting-face ((t (:foreground "black" :background "yellow"))))
 '(markdown-hr-face ((t (:inherit (markdown-markup-face)))))
 '(markdown-html-attr-name-face ((t (:inherit (font-lock-variable-name-face)))))
 '(markdown-html-attr-value-face ((t (:inherit (font-lock-string-face)))))
 '(markdown-html-entity-face ((t (:inherit (font-lock-variable-name-face)))))
 '(markdown-html-tag-delimiter-face ((t (:inherit (markdown-markup-face)))))
 '(markdown-html-tag-name-face ((t (:inherit (font-lock-keyword-face)))))
 '(markdown-inline-code-face ((t (:extend nil :inherit (markdown-code-face markdown-pre-face)))))
 '(markdown-italic-face ((t (:foreground "#9c91e4" :inherit (italic)))))
 '(markdown-language-info-face ((t (:inherit (font-lock-string-face)))))
 '(markdown-language-keyword-face ((t (:inherit (font-lock-type-face)))))
 '(markdown-line-break-face ((t (:underline (:color foreground-color :style line) :inherit (font-lock-constant-face)))))
 '(markdown-link-face ((t (:foreground "#268bd2" :inherit (bold)))))
 '(markdown-link-title-face ((t (:inherit (font-lock-comment-face)))))
 '(markdown-list-face ((t (:foreground "#eb4509"))))
 '(markdown-markup-face ((t (:foreground "#9c91e4"))))
 '(markdown-math-face ((t (:inherit (font-lock-string-face)))))
 '(markdown-metadata-key-face ((t (:foreground "#e74c3c"))))
 '(markdown-metadata-value-face ((t (:inherit (font-lock-string-face)))))
 '(markdown-missing-link-face ((t (:inherit (font-lock-warning-face)))))
 '(markdown-plain-url-face ((t (:inherit (markdown-link-face)))))
 '(markdown-pre-face ((t (:foreground "#66d9ef"))))
 '(markdown-reference-face ((t (:foreground "#7f7f80"))))
 '(markdown-strike-through-face ((t (:strike-through t))))
 '(markdown-table-face ((t (:inherit (markdown-code-face)))))
 '(markdown-url-face ((t (:weight normal :foreground "#eb4509"))))
 '(menu ((((type tty)) (:inverse-video t)) (((type x-toolkit)) nil) (t (:inverse-video t))))
 '(message-cited-text-1 ((t (:foreground "#9c91e4"))))
 '(message-cited-text-2 ((t (:foreground "#eb4509"))))
 '(message-cited-text-3 ((t (:foreground "#b6e63e"))))
 '(message-cited-text-4 ((t (:foreground "#b6e63e"))))
 '(message-header-cc ((t (:foreground "#d7801a" :inherit (message-header-to)))))
 '(message-header-name ((t (:foreground "#b6e63e"))))
 '(message-header-newsgroups ((t (:foreground "#e2c770"))))
 '(message-header-other ((t (:foreground "#9c91e4"))))
 '(message-header-subject ((t (:weight bold :foreground "#fd971f"))))
 '(message-header-to ((t (:weight bold :foreground "#fd971f"))))
 '(message-header-xheader ((t (:foreground "#7f7f80"))))
 '(message-mml ((t (:slant italic :foreground "#555556"))))
 '(message-separator ((t (:foreground "#555556"))))
 '(message-signature-separator ((t (:bold t))))
 '(minimap-active-region-background ((t (:extend t :background "#191919"))))
 '(minimap-current-line-face ((t (:background "red"))))
 '(minimap-font-face ((default (:height 30 :family "DejaVu Sans Mono"))))
 '(minimap-semantic-function-face ((((background dark)) (:background "#202414" :height 2.75 :inherit (font-lock-function-name-face minimap-font-face) :box (:line-width (1 . 1) :color "white" :style nil))) (t (:background "gray90" :height 2.75 :inherit (font-lock-function-name-face minimap-font-face) :box (:line-width (1 . 1) :color "black" :style nil)))))
 '(minimap-semantic-type-face ((((background dark)) (:background "gray10" :height 2.75 :inherit (font-lock-type-face minimap-font-face) :box (:line-width (1 . 1) :color "white" :style nil))) (t (:background "gray90" :height 2.75 :inherit (font-lock-function-name-face minimap-font-face) :box (:line-width (1 . 1) :color "black" :style nil)))))
 '(minimap-semantic-variable-face ((((background dark)) (:background "gray10" :height 2.75 :inherit (font-lock-variable-name-face minimap-font-face) :box (:line-width (1 . 1) :color "white" :style nil))) (t (:background "gray90" :height 2.75 :inherit (font-lock-function-name-face minimap-font-face) :box (:line-width (1 . 1) :color "black" :style nil)))))
 '(mm-command-output ((((class color) (background dark)) (:foreground "ForestGreen")) (((class color) (background light)) (:foreground "red3")) (t (:italic t))))
 '(mouse ((t nil)))
 '(mouse-drag-and-drop-region ((t (:inherit (region)))))
 '(neo-banner-face ((((background dark)) (:weight bold :foreground "lightblue")) (t (:foreground "DarkMagenta"))))
 '(neo-button-face ((t (:underline nil))))
 '(neo-dir-link-face ((t (:foreground "#66d9ef"))))
 '(neo-expand-btn-face ((t (:foreground "#eb4509"))))
 '(neo-file-link-face ((t (:foreground "#d6d6d4"))))
 '(neo-header-face ((((background dark)) (:foreground "White")) (t (:foreground "DarkMagenta"))))
 '(neo-root-dir-face ((t (:box (:line-width (4 . 4) :color "#000000" :style nil) :foreground "#e2c770" :background "#000000"))))
 '(neo-vc-added-face ((t (:foreground "#b6e63e"))))
 '(neo-vc-conflict-face ((t (:weight bold :foreground "#eb4509"))))
 '(neo-vc-default-face ((((background dark)) (:foreground "White")) (t (:foreground "Black"))))
 '(neo-vc-edited-face ((t (:foreground "#e2c770"))))
 '(neo-vc-ignored-face ((t (:foreground "#555556"))))
 '(neo-vc-missing-face ((((background dark)) (:foreground "Red1")) (t (:foreground "Red3"))))
 '(neo-vc-needs-merge-face ((((background dark)) (:foreground "Red1")) (t (:foreground "Red3"))))
 '(neo-vc-needs-update-face ((t (:underline (:color foreground-color :style line)))))
 '(neo-vc-removed-face ((t (:strike-through t :foreground "#e74c3c"))))
 '(neo-vc-unlocked-changes-face ((t (:background "Blue" :foreground "Red"))))
 '(neo-vc-unregistered-face ((t nil)))
 '(neo-vc-up-to-date-face ((((background dark)) (:foreground "LightGray")) (t (:foreground "DarkGray"))))
 '(neo-vc-user-face ((t (:slant italic :foreground "Red"))))
 '(next-error-message ((t (:extend t :inherit (highlight)))))
 '(nobreak-hyphen ((((background dark)) (:foreground "cyan")) (((type pc)) (:foreground "magenta")) (t (:foreground "brown"))))
 '(nobreak-space ((((class color) (min-colors 88)) (:underline (:color foreground-color :style line) :inherit (escape-glyph))) (((class color) (min-colors 8)) (:background "magenta")) (t (:inverse-video t))))
 '(orderless-match-face-0 ((t (:weight bold :foreground "#6ca9d2" :background "#030d15"))))
 '(orderless-match-face-1 ((t (:weight bold :foreground "#e27f5a" :background "#170600"))))
 '(orderless-match-face-2 ((t (:weight bold :foreground "#c2df7a" :background "#121706"))))
 '(orderless-match-face-3 ((t (:weight bold :foreground "#ddcd98" :background "#16130b"))))
 '(org-agenda-calendar-event ((t (:inherit (default)))))
 '(org-agenda-calendar-sexp ((t (:inherit (default)))))
 '(org-agenda-clocking ((t (:weight bold))))
 '(org-agenda-column-dateline ((t (:inherit (org-column)))))
 '(org-agenda-current-time ((t (:inherit (org-time-grid)))))
 '(org-agenda-date ((t (:weight ultra-bold :foreground "#9c91e4"))))
 '(org-agenda-date-today ((t (:weight ultra-bold :foreground "#c3bdee"))))
 '(org-agenda-date-weekend ((t (:weight ultra-bold :foreground "#5d5688"))))
 '(org-agenda-date-weekend-today ((t (:inherit (org-agenda-date-today)))))
 '(org-agenda-diary ((t (:inherit (default)))))
 '(org-agenda-dimmed-todo-face ((t (:foreground "#555556"))))
 '(org-agenda-done ((t (:inherit (org-done)))))
 '(org-agenda-filter-category ((t (:inherit (mode-line)))))
 '(org-agenda-filter-effort ((t (:inherit (mode-line)))))
 '(org-agenda-filter-regexp ((t (:inherit (mode-line)))))
 '(org-agenda-filter-tags ((t (:inherit (mode-line)))))
 '(org-agenda-restriction-lock ((((class color) (min-colors 88) (background light)) (:background "#eeeeee")) (((class color) (min-colors 88) (background dark)) (:background "#1C1C1C")) (((class color) (min-colors 16) (background light)) (:background "#eeeeee")) (((class color) (min-colors 16) (background dark)) (:background "#1C1C1C")) (((class color) (min-colors 8)) (:foreground "black" :background "cyan")) (t (:inverse-video t))))
 '(org-agenda-structure ((t (:weight ultra-bold :foreground "#f0b144"))))
 '(org-agenda-structure-filter ((t (:inherit (org-warning org-agenda-structure)))))
 '(org-agenda-structure-secondary ((t (:inherit (org-agenda-structure)))))
 '(org-archived ((t (:foreground "#7f7f80"))))
 '(org-block ((t (:extend t :background "black"))))
 '(org-block-begin-line ((t (:extend t :foreground "dim gray" :background nil))))
 '(org-block-end-line ((t (:extend t :inherit (org-block-begin-line)))))
 '(org-checkbox ((t (:inherit (org-todo)))))
 '(org-checkbox-statistics-done ((t (:inherit (org-done)))))
 '(org-checkbox-statistics-todo ((t (:inherit (org-todo)))))
 '(org-cite ((t (:foreground "#b9e44d"))))
 '(org-cite-key ((t (:underline (:color foreground-color :style line) :foreground "#c2df7a"))))
 '(org-clock-overlay ((((class color) (min-colors 88) (background light)) (:foreground "black" :background "LightGray")) (((class color) (min-colors 88) (background dark)) (:foreground "white" :background "SkyBlue4")) (((class color) (min-colors 16) (background light)) (:foreground "black" :background "gray")) (((class color) (min-colors 16) (background dark)) (:foreground "white" :background "SkyBlue4")) (((class color) (min-colors 8)) (:foreground "black" :background "cyan")) (t (:inverse-video t))))
 '(org-code ((t (:extend nil :box (:line-width (1 . 1) :color nil :style nil) :foreground "#dfd05e"))))
 '(org-column ((t (:background "black"))))
 '(org-column-title ((t (:height 151 :weight bold :foreground "yellow" :background "darkgreen"))))
 '(org-date ((t (:foreground "#a020f0"))))
 '(org-date-selected ((((class color) (min-colors 16) (background light)) (:inverse-video t :foreground "Red1")) (((class color) (min-colors 16) (background dark)) (:inverse-video t :foreground "Pink")) (((class color) (min-colors 8) (background light)) (:inverse-video t :foreground "red")) (((class color) (min-colors 8) (background dark)) (:inverse-video t :foreground "red")) (t (:inverse-video t))))
 '(org-default ((t (:inherit (variable-pitch)))))
 '(org-dispatcher-highlight ((default (:weight bold)) (((class color) (min-colors 88) (background dark)) (:foreground "gold1" :background "gray20")) (((class color) (min-colors 88) (background light)) (:foreground "DarkBlue" :background "SlateGray1")) (((class color) (min-colors 16) (background dark)) (:foreground "yellow")) (((class color) (min-colors 16) (background light)) (:foreground "blue")) (t (:inverse-video t))))
 '(org-document-info ((t (:foreground "#fd971f"))))
 '(org-document-info-keyword ((t (:inherit (shadow)))))
 '(org-document-title ((t (:weight bold :foreground "#fd971f"))))
 '(org-done ((t (:weight bold :strike-through nil :inherit (org-headline-done)))))
 '(org-drawer ((t (:foreground "VioletRed3"))))
 '(org-ellipsis ((t nil)))
 '(org-footnote ((t (:foreground "#fd971f"))))
 '(org-formula ((t (:foreground "#66d9ef"))))
 '(org-habit-alert-face ((t (:weight bold :background "#7c6f43"))))
 '(org-habit-alert-future-face ((t (:weight bold :background "#534b31"))))
 '(org-habit-clear-face ((t (:weight bold :background "#4e4e4e"))))
 '(org-habit-clear-future-face ((t (:weight bold :background "#2d2e2e"))))
 '(org-habit-overdue-face ((t (:weight bold :background "#7f3129"))))
 '(org-habit-overdue-future-face ((t (:weight bold :background "#552622"))))
 '(org-habit-ready-face ((t (:weight bold :background "#1e5174"))))
 '(org-habit-ready-future-face ((t (:weight bold :background "#1b394f"))))
 '(org-headline-done ((t (:strike-through t :foreground "springgreen4"))))
 '(org-headline-todo ((((class color) (min-colors 16) (background light)) (:foreground "Red4")) (((class color) (min-colors 16) (background dark)) (:foreground "Pink2")) (((class color) (min-colors 8) (background light)) (:bold t))))
 '(org-hide ((t (:foreground "#171717"))))
 '(org-imminent-deadline ((t (:inherit (org-warning)))))
 '(org-indent ((t (:inherit (org-hide)))))
 '(org-inline-src-block ((t (:inherit (org-block)))))
 '(org-inlinetask ((t (:inherit (shadow)))))
 '(org-latex-and-related ((t (:weight bold :foreground "#ffffff"))))
 '(org-level-1 ((t (:extend t :inherit (outline-1)))))
 '(org-level-2 ((t (:extend t :inherit (outline-2)))))
 '(org-level-3 ((t (:extend t :inherit (outline-3)))))
 '(org-level-4 ((t (:extend t :inherit (outline-4)))))
 '(org-level-5 ((t (:extend t :inherit (outline-5)))))
 '(org-level-6 ((t (:extend t :inherit (outline-6)))))
 '(org-level-7 ((t (:extend t :inherit (outline-7)))))
 '(org-level-8 ((t (:extend t :inherit (outline-8)))))
 '(org-link ((t (:foreground "#fd971f" :inherit (link)))))
 '(org-list-dt ((t (:foreground "#e2c770"))))
 '(org-macro ((t (:inherit (org-latex-and-related)))))
 '(org-meta-line ((t (:foreground "#7f7f80"))))
 '(org-mode-line-clock ((t (:inherit (all-the-icons-dpurple)))))
 '(org-mode-line-clock-overrun ((t (:background "red" :inherit (mode-line)))))
 '(org-noter-no-notes-exist-face ((t (:weight bold :foreground "chocolate"))))
 '(org-noter-notes-exist-face ((t (:weight bold :foreground "SpringGreen"))))
 '(org-pomodoro-mode-line ((t (:foreground "gold" :inherit (org-level-3)))))
 '(org-pomodoro-mode-line-break ((t (:foreground "#adff2f" :inherit (org-level-3)))))
 '(org-pomodoro-mode-line-overtime ((t (:inherit (org-macro)))))
 '(org-priority ((t (:foreground "#e74c3c"))))
 '(org-property-value ((t (:foreground "#7f7f80"))))
 '(org-quote ((t (:slant italic :foreground "#cfc0c5" :background "#0c0c0c" :inherit (italic)))))
 '(org-roam-dailies-calendar-note ((t (:underline nil :inherit (org-link)))))
 '(org-roam-dim ((((class color) (background light)) (:foreground "grey60")) (((class color) (background dark)) (:foreground "grey40"))))
 '(org-roam-header-line ((((class color) (background light)) (:weight bold :foreground "DarkGoldenrod4" :extend t)) (((class color) (background dark)) (:weight bold :foreground "sienna" :extend t))))
 '(org-roam-olp ((((class color) (background light)) (:foreground "grey60")) (((class color) (background dark)) (:foreground "grey40"))))
 '(org-roam-preview-heading ((((class color) (background light)) (:foreground "grey30" :background "grey80" :extend t)) (((class color) (background dark)) (:foreground "grey70" :background "grey25" :extend t))))
 '(org-roam-preview-heading-highlight ((((class color) (background light)) (:foreground "grey30" :background "grey75" :extend t)) (((class color) (background dark)) (:foreground "grey70" :background "grey35" :extend t))))
 '(org-roam-preview-heading-selection ((((class color) (background light)) (:foreground "salmon4" :inherit (org-roam-preview-heading-highlight) :extend t)) (((class color) (background dark)) (:foreground "LightSalmon3" :inherit (org-roam-preview-heading-highlight) :extend t))))
 '(org-roam-preview-region ((t (:extend t :inherit (bold)))))
 '(org-roam-shielded ((t (:inherit (warning)))))
 '(org-roam-title ((t (:weight bold))))
 '(org-scheduled ((t (:foreground "#d6d6d4"))))
 '(org-scheduled-previously ((t (:foreground "#ffffff"))))
 '(org-scheduled-today ((t (:foreground "#cfc0c5"))))
 '(org-sexp-date ((t (:foreground "#d6d6d4"))))
 '(org-special-keyword ((t (:foreground "#7f7f80"))))
 '(org-superstar-first ((default (:inherit (org-warning)))))
 '(org-superstar-header-bullet ((default nil)))
 '(org-superstar-item ((default (:inherit (default)))))
 '(org-superstar-leading ((default (:foreground "gray" :inherit (default)))))
 '(org-table ((t (:foreground "#9c91e4"))))
 '(org-table-header ((t (:foreground "Black" :background "LightGray" :inherit (org-table)))))
 '(org-tag ((t (:weight normal :foreground "#e2c770"))))
 '(org-tag-group ((t (:inherit (org-tag)))))
 '(org-target ((((class color) (background light)) (:underline (:color foreground-color :style line))) (((class color) (background dark)) (:underline (:color foreground-color :style line))) (t (:underline (:color foreground-color :style line)))))
 '(org-time-grid ((t (:weight bold :foreground "snow3"))))
 '(org-timeline-block ((t (:background "#8ec298" :inherit (secondary-selection)))))
 '(org-timeline-clocked ((t (:inherit (highlight)))))
 '(org-timeline-elapsed ((t (:inherit (region)))))
 '(org-todo ((t (:weight bold :foreground "#e2c770"))))
 '(org-transclusion ((((class color) (min-colors 88) (background light)) (:extend t :background "#ebf6fa")) (((class color) (min-colors 88) (background dark)) (:extend t :background "#041529")) (t nil)))
 '(org-transclusion-edit ((((class color) (min-colors 88) (background light)) (:extend t :background "#ebf6fa")) (((class color) (min-colors 88) (background dark)) (:extend t :background "#041529")) (t (:extend t :background "forest green"))))
 '(org-transclusion-fringe ((((class color) (min-colors 88) (background light)) nil) (((class color) (min-colors 88) (background dark)) nil) (t nil)))
 '(org-transclusion-keyword ((((class color) (min-colors 88) (background light)) (:foreground "#0030b4")) (((class color) (min-colors 88) (background dark)) (:foreground "#34cfff")) (t (:foreground "darkgray"))))
 '(org-transclusion-source ((((class color) (min-colors 88) (background light)) (:extend t :background "#ebf6fa")) (((class color) (min-colors 88) (background dark)) (:extend t :background "#041529")) (t (:foreground "darkgray"))))
 '(org-transclusion-source-edit ((((class color) (min-colors 88) (background light)) (:extend t :background "#fff3da")) (((class color) (min-colors 88) (background dark)) (:extend t :background "#221000")) (t (:extend t :background "chocolate4"))))
 '(org-transclusion-source-fringe ((((class color) (min-colors 88) (background light)) nil) (((class color) (min-colors 88) (background dark)) nil) (t nil)))
 '(org-upcoming-deadline ((t (:foreground "#ababa9"))))
 '(org-upcoming-distant-deadline ((t (:foreground "#6b6b6a"))))
 '(org-verbatim ((t (:foreground "#b6e63e"))))
 '(org-verse ((t (:inherit (org-block)))))
 '(org-warning ((t (:foreground "#e2c770"))))
 '(outline-1 ((t (:weight bold :extend t :foreground "#eb4509"))))
 '(outline-2 ((t (:weight bold :extend t :foreground "#f0b144"))))
 '(outline-3 ((t (:weight bold :extend t :foreground "#8ec298"))))
 '(outline-4 ((t (:weight bold :extend t :foreground "#5ca8dd"))))
 '(outline-5 ((t (:weight bold :extend t :foreground "#f4a284"))))
 '(outline-6 ((t (:weight bold :extend t :foreground "#9c91e4"))))
 '(outline-7 ((t (:weight bold :extend t :foreground "#cbdeec"))))
 '(outline-8 ((t (:weight bold :extend t :foreground "#92c4e8"))))
 '(package-description ((t (:inherit (default)))))
 '(package-help-section-name ((t (:inherit (bold font-lock-function-name-face)))))
 '(package-name ((t (:inherit (link)))))
 '(package-status-avail-obso ((t (:inherit (package-status-incompat)))))
 '(package-status-available ((t (:inherit (default)))))
 '(package-status-built-in ((t (:inherit (font-lock-builtin-face)))))
 '(package-status-dependency ((t (:inherit (package-status-installed)))))
 '(package-status-disabled ((t (:inherit (font-lock-warning-face)))))
 '(package-status-external ((t (:inherit (package-status-built-in)))))
 '(package-status-held ((t (:inherit (font-lock-constant-face)))))
 '(package-status-incompat ((t (:inherit (error)))))
 '(package-status-installed ((t (:inherit (font-lock-comment-face)))))
 '(package-status-new ((t (:inherit (bold package-status-available)))))
 '(package-status-unsigned ((t (:inherit (font-lock-warning-face)))))
 '(page-break-lines ((t (:weight normal :slant normal :inherit (font-lock-comment-face)))))
 '(pdf-isearch-batch ((((background dark)) (:inherit (match))) (((background light)) (:inherit (match)))))
 '(pdf-isearch-lazy ((((background dark)) (:inherit (lazy-highlight))) (((background light)) (:inherit (lazy-highlight)))))
 '(pdf-isearch-match ((((background dark)) (:inherit (isearch))) (((background light)) (:inherit (isearch)))))
 '(pdf-occur-document-face ((default (:inherit (font-lock-string-face)))))
 '(pdf-occur-page-face ((default (:inherit (font-lock-type-face)))))
 '(pdf-view-rectangle ((((background dark)) (:inherit (highlight))) (((background light)) (:inherit (highlight)))))
 '(pdf-view-region ((((background dark)) (:inherit (region))) (((background light)) (:inherit (region)))))
 '(persp-face-lighter-default ((t (:weight bold :foreground "#fd971f"))))
 '(persp-face-lighter-nil-persp ((t (:foreground "#555556"))))
 '(persp-selected-face ((t (:foreground "dark orange"))))
 '(popup-face ((t (:inherit (tooltip)))))
 '(popup-isearch-match ((t (:background "sky blue" :inherit (default)))))
 '(popup-menu-face ((t (:inherit (popup-face)))))
 '(popup-menu-mouse-face ((t (:foreground "white" :background "blue"))))
 '(popup-menu-selection-face ((t (:foreground "white" :background "steelblue" :inherit (default)))))
 '(popup-menu-summary-face ((t (:inherit (popup-summary-face)))))
 '(popup-scroll-bar-background-face ((t (:background "gray"))))
 '(popup-scroll-bar-foreground-face ((t (:background "black"))))
 '(popup-summary-face ((t (:foreground "dimgray" :inherit (popup-face)))))
 '(popup-tip-face ((t (:foreground "#9c91e4" :background "#1B2229" :inherit (popup-face)))))
 '(pulsar-blue ((default (:extend t)) (((class color) (min-colors 88) (background light)) (:background "#8fcfff")) (((class color) (min-colors 88) (background dark)) (:background "#242679")) (t (:inverse-video t))))
 '(pulsar-cyan ((default (:extend t)) (((class color) (min-colors 88) (background light)) (:background "#8eecf4")) (((class color) (min-colors 88) (background dark)) (:background "#004065")) (t (:inverse-video t))))
 '(pulsar-generic ((t (:extend t :inherit (pulse-highlight-start-face)))))
 '(pulsar-green ((default (:extend t)) (((class color) (min-colors 88) (background light)) (:background "#aceaac")) (((class color) (min-colors 88) (background dark)) (:background "#00422a")) (t (:inverse-video t))))
 '(pulsar-magenta ((default (:extend t)) (((class color) (min-colors 88) (background light)) (:background "#ffccff")) (((class color) (min-colors 88) (background dark)) (:background "#71206a")) (t (:inverse-video t))))
 '(pulsar-red ((default (:extend t)) (((class color) (min-colors 88) (background light)) (:background "#ffcccc")) (((class color) (min-colors 88) (background dark)) (:background "#77002a")) (t (:inverse-video t))))
 '(pulsar-yellow ((default (:extend t)) (((class color) (min-colors 88) (background light)) (:background "#fff29a")) (((class color) (min-colors 88) (background dark)) (:background "#693200")) (t (:inverse-video t))))
 '(pulse-highlight-face ((t (:extend nil :background "#AAAA33"))))
 '(pulse-highlight-start-face ((((class color) (background dark)) (:background "#AAAA33")) (((class color) (background light)) (:background "#FFFFAA"))))
 '(rainbow-delimiters-base-error-face ((t (:foreground "#e74c3c" :inherit (rainbow-delimiters-base-face)))))
 '(rainbow-delimiters-base-face ((t (:inherit (default)))))
 '(rainbow-delimiters-depth-1-face ((t (:foreground "#eb4509"))))
 '(rainbow-delimiters-depth-2-face ((t (:foreground "#fd971f"))))
 '(rainbow-delimiters-depth-3-face ((t (:foreground "#b6e63e"))))
 '(rainbow-delimiters-depth-4-face ((t (:foreground "#66d9ef"))))
 '(rainbow-delimiters-depth-5-face ((t (:foreground "#eb4509"))))
 '(rainbow-delimiters-depth-6-face ((t (:foreground "#fd971f"))))
 '(rainbow-delimiters-depth-7-face ((t (:foreground "#b6e63e"))))
 '(rainbow-delimiters-depth-8-face ((t (:foreground "#b6e63e"))))
 '(rainbow-delimiters-depth-9-face ((t (:foreground "#9c91e4"))))
 '(rainbow-delimiters-mismatched-face ((default (:inherit (rainbow-delimiters-unmatched-face)))))
 '(rainbow-delimiters-unmatched-face ((t (:weight bold :inverse-video t :foreground "#e74c3c"))))
 '(read-multiple-choice-face ((t (:weight bold :inherit (underline)))))
 '(reb-match-0 ((t (:inverse-video t :foreground "#fd971f"))))
 '(reb-match-1 ((t (:inverse-video t :foreground "#eb4509"))))
 '(reb-match-2 ((t (:inverse-video t :foreground "#b6e63e"))))
 '(reb-match-3 ((t (:inverse-video t :foreground "#e2c770"))))
 '(reb-regexp-grouping-backslash ((t (:underline (:color foreground-color :style line) :weight bold :inherit (font-lock-keyword-face)))))
 '(reb-regexp-grouping-construct ((t (:underline (:color foreground-color :style line) :weight bold :inherit (font-lock-keyword-face)))))
 '(rectangle-preview ((t (:inherit (region)))))
 '(rmail-header-name ((t (:inherit (font-lock-function-name-face)))))
 '(rmail-highlight ((t (:inherit (highlight)))))
 '(rxt-highlight-face ((((min-colors 16581375) (background light)) (:background "#eee8d5")) (((min-colors 16581375) (background dark)) (:background "#222222"))))
 '(scroll-bar ((((background light)) (:foreground "black")) (((background dark)) (:foreground "white"))))
 '(semantic-highlight-edits-face ((((class color) (background dark)) (:background "gray20")) (((class color) (background light)) (:background "gray90"))))
 '(semantic-unmatched-syntax-face ((((class color) (background dark)) (:underline (:color "red" :style line))) (((class color) (background light)) (:underline (:color "red" :style line)))))
 '(separator-line ((((type graphic) (background dark)) (:background "#505050" :height 0.1)) (((type graphic) (background light)) (:background "#a0a0a0" :height 0.1)) (t (:foreground "ForestGreen"))))
 '(sh-escaped-newline ((t (:inherit (font-lock-string-face)))))
 '(sh-heredoc ((t (:weight normal :inherit (font-lock-string-face)))))
 '(sh-quoted-exec ((t (:inherit (font-lock-preprocessor-face)))))
 '(shortdoc-heading ((t (:weight bold :height 1.3 :inherit (variable-pitch)))))
 '(shortdoc-section ((t (:inherit (variable-pitch)))))
 '(show-paren-match ((t (:weight ultra-bold :foreground "#e74c3c" :background "#1B2229"))))
 '(show-paren-match-expression ((t (:inherit (show-paren-match)))))
 '(show-paren-mismatch ((t (:weight ultra-bold :foreground "#1B2229" :background "#e74c3c"))))
 '(shr-abbreviation ((t (:underline (:color foreground-color :style wave) :inherit (underline)))))
 '(shr-h1 ((t (:weight bold :height 1.3))))
 '(shr-h2 ((t (:weight bold))))
 '(shr-h3 ((t (:slant italic))))
 '(shr-h4 ((t nil)))
 '(shr-h5 ((t nil)))
 '(shr-h6 ((t nil)))
 '(shr-link ((t (:inherit (link)))))
 '(shr-selected-link ((t (:background "red" :inherit (shr-link)))))
 '(shr-strike-through ((t (:strike-through t))))
 '(smerge-base ((t (:extend t :background "#071b2a"))))
 '(smerge-lower ((t (:extend t :background "#242e0c"))))
 '(smerge-markers ((t (:weight bold :extend t :foreground "#000000" :background "#555556"))))
 '(smerge-refined-added ((t (:inverse-video t :inherit (diff-added)))))
 '(smerge-refined-changed ((t nil)))
 '(smerge-refined-removed ((t (:inverse-video t :inherit (diff-removed)))))
 '(smerge-upper ((t (:extend t :background "#523430"))))
 '(so-long-mode-line-active ((t (:inherit (mode-line-emphasis)))))
 '(so-long-mode-line-inactive ((t (:inherit (mode-line-inactive)))))
 '(solaire-default-face ((t (:foreground "#d6d6d4" :background "#000000" :inherit (default)))))
 '(solaire-fringe-face ((t (:inherit (solaire-default-face)))))
 '(solaire-header-line-face ((t (:inherit (header-line)))))
 '(solaire-hl-line-face ((t (:extend t :background "#000000" :inherit (hl-line)))))
 '(solaire-line-number-face ((t (:inherit (line-number solaire-default-face)))))
 '(solaire-mode-line-active-face ((t (:inherit (mode-line-active)))))
 '(solaire-mode-line-face ((t (:foreground "sienna" :background "#171717"))))
 '(solaire-mode-line-inactive-face ((t (:inherit (mode-line-inactive)))))
 '(solaire-org-hide-face ((t (:inherit (org-hide)))))
 '(solaire-region-face ((t (:inherit (region)))))
 '(sp-pair-overlay-face ((t (:background "#4e4e4e"))))
 '(sp-show-pair-enclosing ((t (:inherit (highlight)))))
 '(sp-show-pair-match-content-face ((t nil)))
 '(sp-show-pair-match-face ((t (:weight ultra-bold :foreground "#e74c3c" :background "#1B2229"))))
 '(sp-show-pair-mismatch-face ((t (:weight ultra-bold :foreground "#1B2229" :background "#e74c3c"))))
 '(sp-wrap-overlay-closing-pair ((t (:foreground "red" :inherit (sp-wrap-overlay-face)))))
 '(sp-wrap-overlay-face ((t (:inherit (sp-pair-overlay-face)))))
 '(sp-wrap-overlay-opening-pair ((t (:foreground "green" :inherit (sp-wrap-overlay-face)))))
 '(sp-wrap-tag-overlay-face ((t (:inherit (sp-pair-overlay-face)))))
 '(speedbar-button-face ((((class color) (background light)) (:foreground "green4")) (((class color) (background dark)) (:foreground "green3"))))
 '(speedbar-directory-face ((((class color) (background light)) (:foreground "blue4")) (((class color) (background dark)) (:foreground "light blue"))))
 '(speedbar-file-face ((((class color) (background light)) (:foreground "cyan4")) (((class color) (background dark)) (:foreground "cyan")) (t (:weight bold))))
 '(speedbar-highlight-face ((((class color) (background light)) (:background "green")) (((class color) (background dark)) (:background "sea green"))))
 '(speedbar-selected-face ((((class color) (background light)) (:underline (:color foreground-color :style line) :foreground "red")) (((class color) (background dark)) (:underline (:color foreground-color :style line) :foreground "red")) (t (:underline (:color foreground-color :style line)))))
 '(speedbar-separator-face ((((class color) (background light)) (:overline "gray" :foreground "white" :background "blue")) (((class color) (background dark)) (:overline "gray" :foreground "white" :background "blue")) (((class grayscale monochrome) (background light)) (:overline "white" :foreground "white" :background "black")) (((class grayscale monochrome) (background dark)) (:overline "black" :foreground "black" :background "white"))))
 '(speedbar-tag-face ((((class color) (background light)) (:foreground "brown")) (((class color) (background dark)) (:foreground "yellow"))))
 '(spell-fu-incorrect-face ((t (:underline (:color "#e74c3c" :style wave)))))
 '(success ((t (:foreground "#b6e63e"))))
 '(tab-bar ((t (:box nil :foreground "#171717" :background "#171717"))))
 '(tab-bar-tab ((t (:box nil :foreground "#d6d6d4" :background "#000000"))))
 '(tab-bar-tab-group-current ((t (:weight bold :box nil :inherit (tab-bar-tab)))))
 '(tab-bar-tab-group-inactive ((t (:inherit (shadow tab-bar-tab-inactive)))))
 '(tab-bar-tab-inactive ((t (:box nil :foreground "#556172" :background "#171717" :inherit (tab-line-tab)))))
 '(tab-bar-tab-ungrouped ((t (:inherit (shadow tab-bar-tab-inactive)))))
 '(tab-line ((t (:box nil :foreground "#171717" :background "#171717"))))
 '(table-cell ((t (:inverse-video nil :foreground "gray90" :background "blue1"))))
 '(tabulated-list-fake-header ((t (:weight bold :underline (:color foreground-color :style line) :overline t))))
 '(tool-bar ((default (:foreground "black" :box (:line-width (1 . 1) :color nil :style released-button))) (((type x w32 mac ns) (class color)) (:background "grey75")) (((type x) (class mono)) (:background "grey"))))
 '(transient-active-infix ((t (:inherit (secondary-selection)))))
 '(transient-amaranth ((t (:foreground "#E52B50" :inherit (transient-key)))))
 '(transient-argument ((t (:inherit (font-lock-warning-face)))))
 '(transient-blue ((t (:foreground "blue" :inherit (transient-key)))))
 '(transient-disabled-suffix ((t (:weight bold :foreground "black" :background "red"))))
 '(transient-enabled-suffix ((t (:weight bold :foreground "black" :background "green"))))
 '(transient-heading ((t (:inherit (font-lock-keyword-face)))))
 '(transient-higher-level ((t (:underline (:color foreground-color :style line)))))
 '(transient-inactive-argument ((t (:inherit (shadow)))))
 '(transient-inactive-value ((t (:inherit (shadow)))))
 '(transient-inapt-suffix ((t (:italic t :inherit (shadow)))))
 '(transient-key ((t (:inherit (font-lock-builtin-face)))))
 '(transient-mismatched-key ((t (:underline (:color foreground-color :style line)))))
 '(transient-nonstandard-key ((t (:underline (:color foreground-color :style line)))))
 '(transient-pink ((t (:foreground "#FF6EB4" :inherit (transient-key)))))
 '(transient-purple ((t (:foreground "#a020f0" :inherit (transient-key)))))
 '(transient-red ((t (:foreground "red" :inherit (transient-key)))))
 '(transient-separator ((((class color) (background light)) (:background "grey80" :extend t)) (((class color) (background dark)) (:background "grey30" :extend t))))
 '(transient-teal ((t (:foreground "#367588" :inherit (transient-key)))))
 '(transient-unreachable ((t (:inherit (shadow)))))
 '(transient-unreachable-key ((t (:inherit (transient-key shadow)))))
 '(transient-value ((t (:inherit (font-lock-string-face)))))
 '(tree-sitter-hl-face:attribute ((default (:inherit (font-lock-preprocessor-face)))))
 '(tree-sitter-hl-face:comment ((default (:inherit (font-lock-comment-face)))))
 '(tree-sitter-hl-face:constant ((default (:inherit (font-lock-constant-face)))))
 '(tree-sitter-hl-face:constant\.builtin ((default (:inherit (font-lock-builtin-face)))))
 '(tree-sitter-hl-face:constructor ((default (:inherit (tree-sitter-hl-face:type)))))
 '(tree-sitter-hl-face:doc ((default (:inherit (font-lock-doc-face)))))
 '(tree-sitter-hl-face:embedded ((default (:inherit (default)))))
 '(tree-sitter-hl-face:escape ((default (:inherit (font-lock-keyword-face)))))
 '(tree-sitter-hl-face:function ((default (:inherit (font-lock-function-name-face)))))
 '(tree-sitter-hl-face:function\.builtin ((default (:inherit (font-lock-builtin-face)))))
 '(tree-sitter-hl-face:function\.call ((default (:underline nil :inherit (link font-lock-function-name-face)))))
 '(tree-sitter-hl-face:function\.macro ((default (:inherit (font-lock-preprocessor-face)))))
 '(tree-sitter-hl-face:function\.special ((default (:inherit (font-lock-preprocessor-face)))))
 '(tree-sitter-hl-face:keyword ((default (:inherit (font-lock-keyword-face)))))
 '(tree-sitter-hl-face:label ((default (:inherit (font-lock-preprocessor-face)))))
 '(tree-sitter-hl-face:method ((default (:inherit (tree-sitter-hl-face:function)))))
 '(tree-sitter-hl-face:method\.call ((default (:inherit (outline-1)))))
 '(tree-sitter-hl-face:number ((default (:inherit (tree-sitter-hl-face:constant)))))
 '(tree-sitter-hl-face:operator ((default (:inherit (tree-sitter-hl-face:keyword)))))
 '(tree-sitter-hl-face:property ((default (:slant italic :inherit (font-lock-constant-face)))))
 '(tree-sitter-hl-face:property\.definition ((default (:inherit (tree-sitter-hl-face:variable\.parameter)))))
 '(tree-sitter-hl-face:punctuation ((default (:inherit (default)))))
 '(tree-sitter-hl-face:punctuation\.bracket ((default (:inherit (font-lock-constant-face)))))
 '(tree-sitter-hl-face:punctuation\.delimiter ((default (:inherit (tree-sitter-hl-face:punctuation)))))
 '(tree-sitter-hl-face:punctuation\.special ((default (:inherit (tree-sitter-hl-face:keyword)))))
 '(tree-sitter-hl-face:string ((default (:inherit (font-lock-string-face)))))
 '(tree-sitter-hl-face:string\.special ((default (:weight bold :inherit (tree-sitter-hl-face:string)))))
 '(tree-sitter-hl-face:tag ((default (:inherit (font-lock-builtin-face)))))
 '(tree-sitter-hl-face:type ((default (:inherit (font-lock-type-face)))))
 '(tree-sitter-hl-face:type\.argument ((default (:inherit (tree-sitter-hl-face:type)))))
 '(tree-sitter-hl-face:type\.builtin ((default (:inherit (font-lock-builtin-face)))))
 '(tree-sitter-hl-face:type\.parameter ((default (:inherit (font-lock-variable-name-face)))))
 '(tree-sitter-hl-face:type\.super ((default (:inherit (tree-sitter-hl-face:type)))))
 '(tree-sitter-hl-face:variable ((default (:inherit (font-lock-variable-name-face)))))
 '(tree-sitter-hl-face:variable\.builtin ((default (:inherit (font-lock-builtin-face)))))
 '(tree-sitter-hl-face:variable\.parameter ((default (:inherit (tree-sitter-hl-face:variable)))))
 '(tree-sitter-hl-face:variable\.special ((default (:inherit (font-lock-warning-face)))))
 '(tty-menu-disabled-face ((((class color) (min-colors 16)) (:background "blue" :foreground "lightgray")) (((class color)) (:background "blue" :foreground "white")) (t (:inherit (shadow)))))
 '(tty-menu-enabled-face ((((class color)) (:weight bold :background "blue" :foreground "yellow")) (t (:weight bold))))
 '(tty-menu-selected-face ((((class color)) (:background "red")) (t (:inverse-video t))))
 '(underline ((((supports :underline t)) (:underline (:color foreground-color :style line))) (((supports :weight bold)) (:weight bold)) (t (:underline (:color foreground-color :style line)))))
 '(undo-tree-visualizer-current-face ((t (:weight bold :foreground "#b6e63e"))))
 '(undo-tree-visualizer-default-face ((t (:foreground "#555556"))))
 '(undo-tree-visualizer-register-face ((t (:foreground "#e2c770"))))
 '(undo-tree-visualizer-unmodified-face ((t (:foreground "#555556"))))
 '(vc-conflict-state ((default (:inherit (vc-state-base)))))
 '(vc-edited-state ((default (:inherit (vc-state-base)))))
 '(vc-locally-added-state ((default (:inherit (vc-state-base)))))
 '(vc-locked-state ((default (:inherit (vc-state-base)))))
 '(vc-missing-state ((default (:inherit (vc-state-base)))))
 '(vc-needs-update-state ((default (:inherit (vc-state-base)))))
 '(vc-removed-state ((default (:inherit (vc-state-base)))))
 '(vc-state-base ((default nil)))
 '(vc-up-to-date-state ((default (:inherit (vc-state-base)))))
 '(vertical-border ((t (:foreground "gray18"))))
 '(vertico-current ((t (:extend t :background "#4e4e4e"))))
 '(vertico-group-separator ((t (:strike-through t :inherit (shadow)))))
 '(vertico-group-title ((t (:slant italic :inherit (shadow)))))
 '(vertico-multiline ((t (:inherit (shadow)))))
 '(vi-tilde-fringe-face ((t (:inherit 'default))))
 '(vimish-fold-fringe ((t (:foreground "#eb4509"))))
 '(vimish-fold-mouse-face ((t (:weight bold :inherit (highlight)))))
 '(vimish-fold-overlay ((t (:weight light :background "#1B2229" :inherit (font-lock-comment-face)))))
 '(warning ((t (:foreground "#e2c770"))))
 '(which-func ((t (:foreground "#268bd2"))))
 '(which-key-command-description-face ((t (:foreground "#268bd2"))))
 '(which-key-docstring-face ((t (:inherit (which-key-note-face)))))
 '(which-key-group-description-face ((t (:foreground "#9c91e4"))))
 '(which-key-highlighted-command-face ((t (:underline (:color foreground-color :style line) :inherit (which-key-command-description-face)))))
 '(which-key-key-face ((t (:foreground "#b6e63e"))))
 '(which-key-local-map-description-face ((t (:foreground "#eb4509"))))
 '(which-key-note-face ((t (:inherit (which-key-separator-face)))))
 '(which-key-separator-face ((t (:inherit (font-lock-comment-face)))))
 '(which-key-special-key-face ((t (:weight bold :inverse-video t :inherit (which-key-key-face)))))
 '(whitespace-big-indent ((((class mono)) (:underline (:color foreground-color :style line) :weight bold :inverse-video t)) (t (:foreground "firebrick" :background "red"))))
 '(whitespace-empty ((t (:extend t :background "#2d2e2e"))))
 '(whitespace-hspace ((((class color) (background dark)) (:foreground "darkgray" :background "grey24")) (((class color) (background light)) (:foreground "lightgray" :background "LemonChiffon3")) (t (:inverse-video t))))
 '(whitespace-indentation ((t (:background "black"))))
 '(whitespace-line ((t (:weight bold :foreground "#e74c3c" :background "#1B2229"))))
 '(whitespace-missing-newline-at-eof ((((class mono)) (:underline (:color foreground-color :style line) :weight bold :inverse-video t)) (t (:foreground "black" :background "#d0d040"))))
 '(whitespace-newline ((t (:foreground "#4e4e4e"))))
 '(whitespace-space ((t (:foreground "#4e4e4e"))))
 '(whitespace-space-after-tab ((((class mono)) (:underline (:color foreground-color :style line) :weight bold :inverse-video t)) (t (:foreground "firebrick" :background "yellow"))))
 '(whitespace-space-before-tab ((((class mono)) (:underline (:color foreground-color :style line) :weight bold :inverse-video t)) (t (:foreground "firebrick" :background "DarkOrange"))))
 '(whitespace-tab ((t (:foreground "#4e4e4e" :background "#2d2e2e"))))
 '(whitespace-trailing ((t (:inherit (trailing-whitespace)))))
 '(widget-button ((t (:weight bold))))
 '(widget-button-pressed ((t (:foreground "#e74c3c"))))
 '(widget-documentation ((t (:foreground "#b6e63e"))))
 '(widget-field ((t (:extend t :box (:line-width (1 . -1) :color "#525254" :style nil) :background "#2d2e2e"))))
 '(widget-inactive ((t (:inherit (shadow)))))
 '(widget-single-line-field ((t (:background "#2d2e2e"))))
 '(window-divider ((t (:inherit (vertical-border)))))
 '(window-divider-first-pixel ((t (:inherit (window-divider)))))
 '(window-divider-last-pixel ((t (:inherit (window-divider)))))
 '(world-clock-label ((t (:inherit (font-lock-variable-name-face)))))
 '(writegood-duplicates-face ((((supports :underline (:style wave))) (:underline (:color "DeepPink" :style wave))) (((class color) (background light)) (:background "MistyRose" :inherit (font-lock-warning-face))) (((class color) (background dark)) (:background "DeepPink" :inherit (font-lock-warning-face)))))
 '(writegood-passive-voice-face ((((supports :underline (:style wave))) (:underline (:color "cyan" :style wave))) (((class color)) (:background "LemonChiffon" :inherit (font-lock-warning-face)))))
 '(writegood-weasels-face ((((supports :underline (:style wave))) (:underline (:color "DarkOrange" :style wave))) (((class color) (background light)) (:background "moccasin" :inherit (font-lock-warning-face))) (((class color) (background dark)) (:background "DarkOrange" :inherit (font-lock-warning-face)))))
 '(yaml-tab-face ((((class color)) (:bold t :foreground "red" :background "red")) (t (:reverse-video t))))
 '(yas--field-debug-face ((t nil)))
 '(yas-field-highlight-face ((t (:inherit (match))))))

(provide-theme 'kc-sentient)
